/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TEMainForm.java
 *
 * Created on Oct 13, 2009, 2:57:21 PM
 */

package tewin;
import java.awt.Color;
import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.*;
import java.io.*;
import java.text.NumberFormat;
import java.text.DecimalFormat;

/**
 *
 * @author James M. Olson
 */
public class TEMainForm extends javax.swing.JFrame {
    private DataConnection dc1;
    private NumberFormat formatter;
    private JLabel[] calDates;
    private JLabel[] calHours;
    private JPanel[] calPanels;
    private Calendar now;
    private int weekNumber;
    private Double[] hours;
    private TimeCardForm timeCard;
    private boolean refresh;
    private SettingsForm sf;
    private int year;
    private TimeCardImport tci;
    private SearchDB searchForm;
    private File instanceFile;
    private TimeEntryDayForm dayForm;
    private Utilities u;
    private OtTracker ott;
    private Calendar payPeriod1,payPeriod2,payPeriod3;
    private OtManager otm;
    private String[] otmResults;

    /** Creates new form TEMainForm */
    public TEMainForm() {
        if(!checkSettings()){
            this.sf.initializeView();
            this.sf.failedStart();
            this.sf.setVisible(true);
            Runtime r = Runtime.getRuntime();
            r.gc();
            this.dispose();
        }else
        {
            this.u = new Utilities();
            formatter = new DecimalFormat("#0.00");
            initComponents();
            //setIcon();
            this.dc1 = new DataConnection();
            this.calDates = new JLabel[35];
            this.calHours = new JLabel[35];
            this.calPanels = new JPanel[35];
            this.hours = new Double[35];
            this.now = Calendar.getInstance();
            this.now.add(Calendar.WEEK_OF_YEAR,-3);
            this.weekNumber = this.now.get(Calendar.WEEK_OF_YEAR);
            this.now.set(Calendar.DAY_OF_WEEK, 7);
            this.year = this.now.get(Calendar.YEAR);
            initPanelArrays();
            initHourArray(this.year, this.weekNumber);
            setHours();
            setDates(this.now);
            this.refresh = false;
            if(this.sf.getDefaultView().equalsIgnoreCase("Calendar"))
                this.pTabbedPane.setSelectedIndex(0);
            else
                this.pTabbedPane.setSelectedIndex(1);
            createOnlyInstanceFile();
            otm = new OtManager();

            
        }

    }

    private void setIcon(){
        java.awt.Image icon = java.awt.Toolkit.getDefaultToolkit().getImage("/TEWIN-16x16.PNG");
        this.setIconImage(icon);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bExit = new javax.swing.JButton();
        lDateString = new javax.swing.JLabel();
        pTabbedPane = new javax.swing.JTabbedPane();
        lpCalendar = new javax.swing.JLayeredPane();
        p1_2 = new javax.swing.JPanel();
        lH1_2 = new javax.swing.JLabel();
        lD1_2 = new javax.swing.JLabel();
        p1_3 = new javax.swing.JPanel();
        lD1_3 = new javax.swing.JLabel();
        lH1_3 = new javax.swing.JLabel();
        p1_1 = new javax.swing.JPanel();
        lH1_1 = new javax.swing.JLabel();
        lD1_1 = new javax.swing.JLabel();
        p2_1 = new javax.swing.JPanel();
        lD2_1 = new javax.swing.JLabel();
        lH2_1 = new javax.swing.JLabel();
        p4_2 = new javax.swing.JPanel();
        lH4_2 = new javax.swing.JLabel();
        lD4_2 = new javax.swing.JLabel();
        p4_4 = new javax.swing.JPanel();
        lH4_4 = new javax.swing.JLabel();
        lD4_4 = new javax.swing.JLabel();
        p3_3 = new javax.swing.JPanel();
        lH3_3 = new javax.swing.JLabel();
        lD3_3 = new javax.swing.JLabel();
        p3_2 = new javax.swing.JPanel();
        lH3_2 = new javax.swing.JLabel();
        lD3_2 = new javax.swing.JLabel();
        p5_2 = new javax.swing.JPanel();
        lH5_2 = new javax.swing.JLabel();
        lD5_2 = new javax.swing.JLabel();
        p5_1 = new javax.swing.JPanel();
        lH5_1 = new javax.swing.JLabel();
        lD5_1 = new javax.swing.JLabel();
        p5_3 = new javax.swing.JPanel();
        lH5_3 = new javax.swing.JLabel();
        lD5_3 = new javax.swing.JLabel();
        p5_4 = new javax.swing.JPanel();
        lH5_4 = new javax.swing.JLabel();
        lD5_4 = new javax.swing.JLabel();
        p2_3 = new javax.swing.JPanel();
        lH2_3 = new javax.swing.JLabel();
        lD2_3 = new javax.swing.JLabel();
        p3_1 = new javax.swing.JPanel();
        lH3_1 = new javax.swing.JLabel();
        lD3_1 = new javax.swing.JLabel();
        p2_2 = new javax.swing.JPanel();
        lH2_2 = new javax.swing.JLabel();
        lD2_2 = new javax.swing.JLabel();
        p4_1 = new javax.swing.JPanel();
        lH4_1 = new javax.swing.JLabel();
        lD4_1 = new javax.swing.JLabel();
        p4_3 = new javax.swing.JPanel();
        lH4_3 = new javax.swing.JLabel();
        lD4_3 = new javax.swing.JLabel();
        bPrevWeek = new javax.swing.JButton();
        p1_4 = new javax.swing.JPanel();
        lD14 = new javax.swing.JLabel();
        lH1_4 = new javax.swing.JLabel();
        p1_7 = new javax.swing.JPanel();
        lD1_7 = new javax.swing.JLabel();
        lH1_7 = new javax.swing.JLabel();
        p1_6 = new javax.swing.JPanel();
        lD1_6 = new javax.swing.JLabel();
        lH1_6 = new javax.swing.JLabel();
        p1_5 = new javax.swing.JPanel();
        lH1_5 = new javax.swing.JLabel();
        lD1_5 = new javax.swing.JLabel();
        lThuCol = new javax.swing.JLabel();
        lWedCol = new javax.swing.JLabel();
        lFriCol = new javax.swing.JLabel();
        lSunCol = new javax.swing.JLabel();
        lMonCol = new javax.swing.JLabel();
        lTueCol = new javax.swing.JLabel();
        lSatCol = new javax.swing.JLabel();
        p2_5 = new javax.swing.JPanel();
        lH2_5 = new javax.swing.JLabel();
        lD2_5 = new javax.swing.JLabel();
        p2_7 = new javax.swing.JPanel();
        lH2_7 = new javax.swing.JLabel();
        lD2_7 = new javax.swing.JLabel();
        bWeek5 = new javax.swing.JButton();
        bWeek4 = new javax.swing.JButton();
        bExport1 = new javax.swing.JButton();
        bWeek1 = new javax.swing.JButton();
        bWeek3 = new javax.swing.JButton();
        bWeek2 = new javax.swing.JButton();
        p4_5 = new javax.swing.JPanel();
        lH4_5 = new javax.swing.JLabel();
        lD4_5 = new javax.swing.JLabel();
        bExport2 = new javax.swing.JButton();
        bExport3 = new javax.swing.JButton();
        p3_6 = new javax.swing.JPanel();
        lH3_6 = new javax.swing.JLabel();
        lD3_6 = new javax.swing.JLabel();
        p3_4 = new javax.swing.JPanel();
        lH3_4 = new javax.swing.JLabel();
        lD3_4 = new javax.swing.JLabel();
        bExport4 = new javax.swing.JButton();
        bExport5 = new javax.swing.JButton();
        p5_7 = new javax.swing.JPanel();
        lH5_7 = new javax.swing.JLabel();
        lD5_7 = new javax.swing.JLabel();
        p3_5 = new javax.swing.JPanel();
        lH3_5 = new javax.swing.JLabel();
        lD3_5 = new javax.swing.JLabel();
        p3_7 = new javax.swing.JPanel();
        lH3_7 = new javax.swing.JLabel();
        lD3_7 = new javax.swing.JLabel();
        p5_5 = new javax.swing.JPanel();
        lH5_5 = new javax.swing.JLabel();
        lD5_5 = new javax.swing.JLabel();
        p2_6 = new javax.swing.JPanel();
        lH2_6 = new javax.swing.JLabel();
        lD2_6 = new javax.swing.JLabel();
        p2_4 = new javax.swing.JPanel();
        lH2_4 = new javax.swing.JLabel();
        lD2_4 = new javax.swing.JLabel();
        p4_7 = new javax.swing.JPanel();
        lH4_7 = new javax.swing.JLabel();
        lD4_7 = new javax.swing.JLabel();
        bNextWeek = new javax.swing.JButton();
        p4_6 = new javax.swing.JPanel();
        lH4_6 = new javax.swing.JLabel();
        lD4_6 = new javax.swing.JLabel();
        p5_6 = new javax.swing.JPanel();
        lH5_6 = new javax.swing.JLabel();
        lD5_6 = new javax.swing.JLabel();
        lpTimeCardWeek = new javax.swing.JLayeredPane();
        bNextWeek2 = new javax.swing.JButton();
        bEditTCView = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tpTimeCard = new javax.swing.JTextPane();
        bPrevWeek3 = new javax.swing.JButton();
        lRange = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lDateRange = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taComment = new javax.swing.JTextArea();
        bExportTCView = new javax.swing.JButton();
        lpOvertime = new javax.swing.JLayeredPane();
        bPrevPayOT = new javax.swing.JButton();
        bNextPayOT = new javax.swing.JButton();
        tbSTw1 = new javax.swing.JTextField();
        tbDTw1 = new javax.swing.JTextField();
        tbTHw1 = new javax.swing.JTextField();
        lDTw1 = new javax.swing.JLabel();
        lDTactualW1 = new javax.swing.JLabel();
        lSTEnteredW1 = new javax.swing.JLabel();
        lTHw1 = new javax.swing.JLabel();
        javax.swing.JButton bCreateRptW3 = new javax.swing.JButton();
        lPayDateW1 = new javax.swing.JLabel();
        lEnteredW1 = new javax.swing.JLabel();
        lSTw1 = new javax.swing.JLabel();
        lTHEnteredW1 = new javax.swing.JLabel();
        lDTEnteredW1 = new javax.swing.JLabel();
        lDateRangeW1 = new javax.swing.JLabel();
        lSTactualW1 = new javax.swing.JLabel();
        lTHactualW1 = new javax.swing.JLabel();
        lTHhrsW1 = new javax.swing.JLabel();
        lDThrsW1 = new javax.swing.JLabel();
        lSThrsW1 = new javax.swing.JLabel();
        lEnteredW2 = new javax.swing.JLabel();
        lSTEnteredW2 = new javax.swing.JLabel();
        lTHEnteredW2 = new javax.swing.JLabel();
        lDTEnteredW2 = new javax.swing.JLabel();
        lDTactualW2 = new javax.swing.JLabel();
        lTHactualW2 = new javax.swing.JLabel();
        lSTactualW2 = new javax.swing.JLabel();
        lDateRangeW2 = new javax.swing.JLabel();
        lSThrsW2 = new javax.swing.JLabel();
        lTHhrsW2 = new javax.swing.JLabel();
        lDThrsW2 = new javax.swing.JLabel();
        javax.swing.JButton bSaveChangesW2 = new javax.swing.JButton();
        lDTw2 = new javax.swing.JLabel();
        lTHw2 = new javax.swing.JLabel();
        lSTw2 = new javax.swing.JLabel();
        lPayW2 = new javax.swing.JLabel();
        tbSTw2 = new javax.swing.JTextField();
        tbTHw2 = new javax.swing.JTextField();
        tbDTw2 = new javax.swing.JTextField();
        lEnteredW3 = new javax.swing.JLabel();
        lSTEnteredW3 = new javax.swing.JLabel();
        lTHEnteredW3 = new javax.swing.JLabel();
        lDTEnteredW3 = new javax.swing.JLabel();
        lDTactualW3 = new javax.swing.JLabel();
        lTHactualW3 = new javax.swing.JLabel();
        lSTactualW3 = new javax.swing.JLabel();
        lDateRangeW3 = new javax.swing.JLabel();
        lSThrsW3 = new javax.swing.JLabel();
        lTHhrsW3 = new javax.swing.JLabel();
        lDThrsW3 = new javax.swing.JLabel();
        javax.swing.JButton bSaveChangesW3 = new javax.swing.JButton();
        lDTw3 = new javax.swing.JLabel();
        lTHw3 = new javax.swing.JLabel();
        lSTw3 = new javax.swing.JLabel();
        lPayW3 = new javax.swing.JLabel();
        tbSTw3 = new javax.swing.JTextField();
        tbTHw3 = new javax.swing.JTextField();
        tbDTw3 = new javax.swing.JTextField();
        javax.swing.JButton bSaveChangesW1 = new javax.swing.JButton();
        javax.swing.JButton bCreateRptW1 = new javax.swing.JButton();
        javax.swing.JButton bCreateRptW2 = new javax.swing.JButton();
        lPayW4 = new javax.swing.JLabel();
        lPayDateLblW1 = new javax.swing.JLabel();
        sep3 = new javax.swing.JSeparator();
        sep1 = new javax.swing.JSeparator();
        sep2 = new javax.swing.JSeparator();
        lPayDateLblW2 = new javax.swing.JLabel();
        lPayDateW2 = new javax.swing.JLabel();
        lPayDateLblW3 = new javax.swing.JLabel();
        lPayDateW3 = new javax.swing.JLabel();
        bLongReport = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        miSettings = new javax.swing.JMenuItem();
        miExit = new javax.swing.JMenuItem();
        mTools = new javax.swing.JMenu();
        miSearch = new javax.swing.JMenuItem();
        miProjectRpt = new javax.swing.JMenuItem();
        miOTTracker = new javax.swing.JMenuItem();
        miDBManage = new javax.swing.JMenuItem();
        miImport = new javax.swing.JMenuItem();
        mHelp = new javax.swing.JMenu();
        miHelpDoc = new javax.swing.JMenuItem();
        miAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EATON - Time Entry for Windows");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.white);
        setName("MainApp"); // NOI18N
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        bExit.setText("Exit");
        bExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExitActionPerformed(evt);
            }
        });

        lDateString.setText("Date");

        pTabbedPane.setToolTipText("");
        pTabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                pTabbedPaneStateChanged(evt);
            }
        });

        p1_2.setBackground(new java.awt.Color(255, 255, 255));
        p1_2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p1_2.setToolTipText("");
        p1_2.setAlignmentX(0.1F);
        p1_2.setAlignmentY(0.1F);
        p1_2.setMaximumSize(new java.awt.Dimension(100, 100));
        p1_2.setMinimumSize(new java.awt.Dimension(80, 80));
        p1_2.setPreferredSize(new java.awt.Dimension(90, 90));

        lH1_2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH1_2.setText("l1_1H");

        lD1_2.setText("lD1_1");
        lD1_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD1_2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p1_2Layout = new javax.swing.GroupLayout(p1_2);
        p1_2.setLayout(p1_2Layout);
        p1_2Layout.setHorizontalGroup(
            p1_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p1_2Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH1_2)
                .addContainerGap())
            .addGroup(p1_2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD1_2)
                .addContainerGap(49, Short.MAX_VALUE))
        );
        p1_2Layout.setVerticalGroup(
            p1_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p1_2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD1_2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH1_2)
                .addContainerGap())
        );

        lpCalendar.add(p1_2);
        p1_2.setBounds(120, 40, 90, 90);

        p1_3.setBackground(new java.awt.Color(255, 255, 255));
        p1_3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p1_3.setToolTipText("");
        p1_3.setAlignmentX(0.1F);
        p1_3.setAlignmentY(0.1F);
        p1_3.setMaximumSize(new java.awt.Dimension(100, 100));
        p1_3.setMinimumSize(new java.awt.Dimension(80, 80));
        p1_3.setPreferredSize(new java.awt.Dimension(90, 90));

        lD1_3.setText("lD1_1");
        lD1_3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD1_3MouseClicked(evt);
            }
        });

        lH1_3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH1_3.setText("l1_1H");

        javax.swing.GroupLayout p1_3Layout = new javax.swing.GroupLayout(p1_3);
        p1_3.setLayout(p1_3Layout);
        p1_3Layout.setHorizontalGroup(
            p1_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p1_3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD1_3)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p1_3Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH1_3)
                .addContainerGap())
        );
        p1_3Layout.setVerticalGroup(
            p1_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p1_3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD1_3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH1_3)
                .addContainerGap())
        );

        lpCalendar.add(p1_3);
        p1_3.setBounds(210, 40, 90, 90);

        p1_1.setBackground(new java.awt.Color(255, 255, 153));
        p1_1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p1_1.setToolTipText("");
        p1_1.setAlignmentX(0.1F);
        p1_1.setAlignmentY(0.1F);
        p1_1.setMaximumSize(new java.awt.Dimension(100, 100));
        p1_1.setMinimumSize(new java.awt.Dimension(80, 80));
        p1_1.setPreferredSize(new java.awt.Dimension(90, 90));

        lH1_1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH1_1.setText("l1_1H");

        lD1_1.setText("lD1_1");
        lD1_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD1_1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p1_1Layout = new javax.swing.GroupLayout(p1_1);
        p1_1.setLayout(p1_1Layout);
        p1_1Layout.setHorizontalGroup(
            p1_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p1_1Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH1_1)
                .addContainerGap())
            .addGroup(p1_1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD1_1)
                .addContainerGap(49, Short.MAX_VALUE))
        );
        p1_1Layout.setVerticalGroup(
            p1_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p1_1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD1_1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH1_1)
                .addContainerGap())
        );

        lpCalendar.add(p1_1);
        p1_1.setBounds(30, 40, 90, 90);

        p2_1.setBackground(new java.awt.Color(255, 255, 153));
        p2_1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p2_1.setToolTipText("");
        p2_1.setAlignmentX(0.1F);
        p2_1.setAlignmentY(0.1F);
        p2_1.setMaximumSize(new java.awt.Dimension(100, 100));
        p2_1.setMinimumSize(new java.awt.Dimension(80, 80));
        p2_1.setPreferredSize(new java.awt.Dimension(90, 90));

        lD2_1.setText("lD1_1");
        lD2_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD2_1MouseClicked(evt);
            }
        });

        lH2_1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH2_1.setText("l1_1H");

        javax.swing.GroupLayout p2_1Layout = new javax.swing.GroupLayout(p2_1);
        p2_1.setLayout(p2_1Layout);
        p2_1Layout.setHorizontalGroup(
            p2_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p2_1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD2_1)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p2_1Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH2_1)
                .addContainerGap())
        );
        p2_1Layout.setVerticalGroup(
            p2_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p2_1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD2_1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH2_1)
                .addContainerGap())
        );

        lpCalendar.add(p2_1);
        p2_1.setBounds(30, 130, 90, 90);

        p4_2.setBackground(new java.awt.Color(255, 255, 255));
        p4_2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p4_2.setToolTipText("");
        p4_2.setAlignmentX(0.1F);
        p4_2.setAlignmentY(0.1F);
        p4_2.setMaximumSize(new java.awt.Dimension(100, 100));
        p4_2.setMinimumSize(new java.awt.Dimension(80, 80));
        p4_2.setPreferredSize(new java.awt.Dimension(90, 90));

        lH4_2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH4_2.setText("l1_1H");

        lD4_2.setText("lD1_1");
        lD4_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD4_2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p4_2Layout = new javax.swing.GroupLayout(p4_2);
        p4_2.setLayout(p4_2Layout);
        p4_2Layout.setHorizontalGroup(
            p4_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p4_2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD4_2)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p4_2Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH4_2)
                .addContainerGap())
        );
        p4_2Layout.setVerticalGroup(
            p4_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p4_2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD4_2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH4_2)
                .addContainerGap())
        );

        lpCalendar.add(p4_2);
        p4_2.setBounds(120, 310, 90, 90);

        p4_4.setBackground(new java.awt.Color(255, 255, 255));
        p4_4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p4_4.setToolTipText("");
        p4_4.setAlignmentX(0.1F);
        p4_4.setAlignmentY(0.1F);
        p4_4.setMaximumSize(new java.awt.Dimension(100, 100));
        p4_4.setMinimumSize(new java.awt.Dimension(80, 80));
        p4_4.setPreferredSize(new java.awt.Dimension(90, 90));

        lH4_4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH4_4.setText("l1_1H");

        lD4_4.setText("lD1_1");
        lD4_4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD4_4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p4_4Layout = new javax.swing.GroupLayout(p4_4);
        p4_4.setLayout(p4_4Layout);
        p4_4Layout.setHorizontalGroup(
            p4_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p4_4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD4_4)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p4_4Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH4_4)
                .addContainerGap())
        );
        p4_4Layout.setVerticalGroup(
            p4_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p4_4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD4_4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH4_4)
                .addContainerGap())
        );

        lpCalendar.add(p4_4);
        p4_4.setBounds(300, 310, 90, 90);

        p3_3.setBackground(new java.awt.Color(255, 255, 255));
        p3_3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p3_3.setToolTipText("");
        p3_3.setAlignmentX(0.1F);
        p3_3.setAlignmentY(0.1F);
        p3_3.setMaximumSize(new java.awt.Dimension(100, 100));
        p3_3.setMinimumSize(new java.awt.Dimension(80, 80));
        p3_3.setPreferredSize(new java.awt.Dimension(90, 90));

        lH3_3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH3_3.setText("l1_1H");

        lD3_3.setText("lD1_1");
        lD3_3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD3_3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p3_3Layout = new javax.swing.GroupLayout(p3_3);
        p3_3.setLayout(p3_3Layout);
        p3_3Layout.setHorizontalGroup(
            p3_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p3_3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD3_3)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p3_3Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH3_3)
                .addContainerGap())
        );
        p3_3Layout.setVerticalGroup(
            p3_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p3_3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD3_3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH3_3)
                .addContainerGap())
        );

        lpCalendar.add(p3_3);
        p3_3.setBounds(210, 220, 90, 90);

        p3_2.setBackground(new java.awt.Color(255, 255, 255));
        p3_2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p3_2.setToolTipText("");
        p3_2.setAlignmentX(0.1F);
        p3_2.setAlignmentY(0.1F);
        p3_2.setMaximumSize(new java.awt.Dimension(100, 100));
        p3_2.setMinimumSize(new java.awt.Dimension(80, 80));
        p3_2.setPreferredSize(new java.awt.Dimension(90, 90));

        lH3_2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH3_2.setText("l1_1H");

        lD3_2.setText("lD1_1");
        lD3_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD3_2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p3_2Layout = new javax.swing.GroupLayout(p3_2);
        p3_2.setLayout(p3_2Layout);
        p3_2Layout.setHorizontalGroup(
            p3_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p3_2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD3_2)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p3_2Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH3_2)
                .addContainerGap())
        );
        p3_2Layout.setVerticalGroup(
            p3_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p3_2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD3_2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH3_2)
                .addContainerGap())
        );

        lpCalendar.add(p3_2);
        p3_2.setBounds(120, 220, 90, 90);

        p5_2.setBackground(new java.awt.Color(255, 255, 255));
        p5_2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p5_2.setToolTipText("");
        p5_2.setAlignmentX(0.1F);
        p5_2.setAlignmentY(0.1F);
        p5_2.setMaximumSize(new java.awt.Dimension(100, 100));
        p5_2.setMinimumSize(new java.awt.Dimension(80, 80));
        p5_2.setPreferredSize(new java.awt.Dimension(90, 90));

        lH5_2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH5_2.setText("l1_1H");

        lD5_2.setText("lD1_1");
        lD5_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD5_2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p5_2Layout = new javax.swing.GroupLayout(p5_2);
        p5_2.setLayout(p5_2Layout);
        p5_2Layout.setHorizontalGroup(
            p5_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p5_2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD5_2)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p5_2Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH5_2)
                .addContainerGap())
        );
        p5_2Layout.setVerticalGroup(
            p5_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p5_2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD5_2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH5_2)
                .addContainerGap())
        );

        lpCalendar.add(p5_2);
        p5_2.setBounds(120, 400, 90, 90);

        p5_1.setBackground(new java.awt.Color(255, 255, 153));
        p5_1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p5_1.setToolTipText("");
        p5_1.setAlignmentX(0.1F);
        p5_1.setAlignmentY(0.1F);
        p5_1.setMaximumSize(new java.awt.Dimension(100, 100));
        p5_1.setMinimumSize(new java.awt.Dimension(80, 80));
        p5_1.setPreferredSize(new java.awt.Dimension(90, 90));

        lH5_1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH5_1.setText("l1_1H");

        lD5_1.setText("lD1_1");
        lD5_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD5_1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p5_1Layout = new javax.swing.GroupLayout(p5_1);
        p5_1.setLayout(p5_1Layout);
        p5_1Layout.setHorizontalGroup(
            p5_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p5_1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD5_1)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p5_1Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH5_1)
                .addContainerGap())
        );
        p5_1Layout.setVerticalGroup(
            p5_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p5_1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD5_1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH5_1)
                .addContainerGap())
        );

        lpCalendar.add(p5_1);
        p5_1.setBounds(30, 400, 90, 90);

        p5_3.setBackground(new java.awt.Color(255, 255, 255));
        p5_3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p5_3.setToolTipText("");
        p5_3.setAlignmentX(0.1F);
        p5_3.setAlignmentY(0.1F);
        p5_3.setMaximumSize(new java.awt.Dimension(100, 100));
        p5_3.setMinimumSize(new java.awt.Dimension(80, 80));
        p5_3.setPreferredSize(new java.awt.Dimension(90, 90));

        lH5_3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH5_3.setText("l1_1H");

        lD5_3.setText("lD1_1");
        lD5_3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD5_3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p5_3Layout = new javax.swing.GroupLayout(p5_3);
        p5_3.setLayout(p5_3Layout);
        p5_3Layout.setHorizontalGroup(
            p5_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p5_3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD5_3)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p5_3Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH5_3)
                .addContainerGap())
        );
        p5_3Layout.setVerticalGroup(
            p5_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p5_3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD5_3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH5_3)
                .addContainerGap())
        );

        lpCalendar.add(p5_3);
        p5_3.setBounds(210, 400, 90, 90);

        p5_4.setBackground(new java.awt.Color(255, 255, 255));
        p5_4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p5_4.setToolTipText("");
        p5_4.setAlignmentX(0.1F);
        p5_4.setAlignmentY(0.1F);
        p5_4.setMaximumSize(new java.awt.Dimension(100, 100));
        p5_4.setMinimumSize(new java.awt.Dimension(80, 80));
        p5_4.setPreferredSize(new java.awt.Dimension(90, 90));

        lH5_4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH5_4.setText("l1_1H");

        lD5_4.setText("lD1_1");
        lD5_4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD5_4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p5_4Layout = new javax.swing.GroupLayout(p5_4);
        p5_4.setLayout(p5_4Layout);
        p5_4Layout.setHorizontalGroup(
            p5_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p5_4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD5_4)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p5_4Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH5_4)
                .addContainerGap())
        );
        p5_4Layout.setVerticalGroup(
            p5_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p5_4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD5_4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH5_4)
                .addContainerGap())
        );

        lpCalendar.add(p5_4);
        p5_4.setBounds(300, 400, 90, 90);

        p2_3.setBackground(new java.awt.Color(255, 255, 255));
        p2_3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p2_3.setToolTipText("");
        p2_3.setAlignmentX(0.1F);
        p2_3.setAlignmentY(0.1F);
        p2_3.setMaximumSize(new java.awt.Dimension(100, 100));
        p2_3.setMinimumSize(new java.awt.Dimension(80, 80));
        p2_3.setPreferredSize(new java.awt.Dimension(90, 90));

        lH2_3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH2_3.setText("l1_1H");

        lD2_3.setText("lD1_1");
        lD2_3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD2_3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p2_3Layout = new javax.swing.GroupLayout(p2_3);
        p2_3.setLayout(p2_3Layout);
        p2_3Layout.setHorizontalGroup(
            p2_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p2_3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD2_3)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p2_3Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH2_3)
                .addContainerGap())
        );
        p2_3Layout.setVerticalGroup(
            p2_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p2_3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD2_3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH2_3)
                .addContainerGap())
        );

        lpCalendar.add(p2_3);
        p2_3.setBounds(210, 130, 90, 90);

        p3_1.setBackground(new java.awt.Color(255, 255, 153));
        p3_1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p3_1.setToolTipText("");
        p3_1.setAlignmentX(0.1F);
        p3_1.setAlignmentY(0.1F);
        p3_1.setMaximumSize(new java.awt.Dimension(100, 100));
        p3_1.setMinimumSize(new java.awt.Dimension(80, 80));
        p3_1.setPreferredSize(new java.awt.Dimension(90, 90));

        lH3_1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH3_1.setText("l1_1H");

        lD3_1.setText("lD1_1");
        lD3_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD3_1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p3_1Layout = new javax.swing.GroupLayout(p3_1);
        p3_1.setLayout(p3_1Layout);
        p3_1Layout.setHorizontalGroup(
            p3_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p3_1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD3_1)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p3_1Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH3_1)
                .addContainerGap())
        );
        p3_1Layout.setVerticalGroup(
            p3_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p3_1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD3_1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH3_1)
                .addContainerGap())
        );

        lpCalendar.add(p3_1);
        p3_1.setBounds(30, 220, 90, 90);

        p2_2.setBackground(new java.awt.Color(255, 255, 255));
        p2_2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p2_2.setToolTipText("");
        p2_2.setAlignmentX(0.1F);
        p2_2.setAlignmentY(0.1F);
        p2_2.setMaximumSize(new java.awt.Dimension(100, 100));
        p2_2.setMinimumSize(new java.awt.Dimension(80, 80));
        p2_2.setPreferredSize(new java.awt.Dimension(90, 90));

        lH2_2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH2_2.setText("l1_1H");

        lD2_2.setText("lD1_1");
        lD2_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD2_2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p2_2Layout = new javax.swing.GroupLayout(p2_2);
        p2_2.setLayout(p2_2Layout);
        p2_2Layout.setHorizontalGroup(
            p2_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p2_2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD2_2)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p2_2Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH2_2)
                .addContainerGap())
        );
        p2_2Layout.setVerticalGroup(
            p2_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p2_2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD2_2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH2_2)
                .addContainerGap())
        );

        lpCalendar.add(p2_2);
        p2_2.setBounds(120, 130, 90, 90);

        p4_1.setBackground(new java.awt.Color(255, 255, 153));
        p4_1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p4_1.setToolTipText("");
        p4_1.setAlignmentX(0.1F);
        p4_1.setAlignmentY(0.1F);
        p4_1.setMaximumSize(new java.awt.Dimension(100, 100));
        p4_1.setMinimumSize(new java.awt.Dimension(80, 80));
        p4_1.setPreferredSize(new java.awt.Dimension(90, 90));

        lH4_1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH4_1.setText("l1_1H");

        lD4_1.setText("lD1_1");
        lD4_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD4_1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p4_1Layout = new javax.swing.GroupLayout(p4_1);
        p4_1.setLayout(p4_1Layout);
        p4_1Layout.setHorizontalGroup(
            p4_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p4_1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD4_1)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p4_1Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH4_1)
                .addContainerGap())
        );
        p4_1Layout.setVerticalGroup(
            p4_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p4_1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD4_1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH4_1)
                .addContainerGap())
        );

        lpCalendar.add(p4_1);
        p4_1.setBounds(30, 310, 90, 90);

        p4_3.setBackground(new java.awt.Color(255, 255, 255));
        p4_3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p4_3.setToolTipText("");
        p4_3.setAlignmentX(0.1F);
        p4_3.setAlignmentY(0.1F);
        p4_3.setMaximumSize(new java.awt.Dimension(100, 100));
        p4_3.setMinimumSize(new java.awt.Dimension(80, 80));
        p4_3.setPreferredSize(new java.awt.Dimension(90, 90));

        lH4_3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH4_3.setText("l1_1H");

        lD4_3.setText("lD1_1");
        lD4_3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD4_3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p4_3Layout = new javax.swing.GroupLayout(p4_3);
        p4_3.setLayout(p4_3Layout);
        p4_3Layout.setHorizontalGroup(
            p4_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p4_3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD4_3)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p4_3Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH4_3)
                .addContainerGap())
        );
        p4_3Layout.setVerticalGroup(
            p4_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p4_3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD4_3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH4_3)
                .addContainerGap())
        );

        lpCalendar.add(p4_3);
        p4_3.setBounds(210, 310, 90, 90);

        bPrevWeek.setText("<< Previous Week");
        bPrevWeek.setToolTipText("Move calendar back ONE week");
        bPrevWeek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPrevWeekActionPerformed(evt);
            }
        });
        lpCalendar.add(bPrevWeek);
        bPrevWeek.setBounds(30, 500, 186, 33);

        p1_4.setBackground(new java.awt.Color(255, 255, 255));
        p1_4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p1_4.setToolTipText("");
        p1_4.setAlignmentX(0.1F);
        p1_4.setAlignmentY(0.1F);
        p1_4.setMaximumSize(new java.awt.Dimension(100, 100));
        p1_4.setMinimumSize(new java.awt.Dimension(80, 80));
        p1_4.setPreferredSize(new java.awt.Dimension(90, 90));

        lD14.setText("lD1_1");
        lD14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD14MouseClicked(evt);
            }
        });

        lH1_4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH1_4.setText("l1_1H");

        javax.swing.GroupLayout p1_4Layout = new javax.swing.GroupLayout(p1_4);
        p1_4.setLayout(p1_4Layout);
        p1_4Layout.setHorizontalGroup(
            p1_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p1_4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD14)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p1_4Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH1_4)
                .addContainerGap())
        );
        p1_4Layout.setVerticalGroup(
            p1_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p1_4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH1_4)
                .addContainerGap())
        );

        lpCalendar.add(p1_4);
        p1_4.setBounds(300, 40, 90, 90);

        p1_7.setBackground(new java.awt.Color(255, 255, 153));
        p1_7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p1_7.setToolTipText("");
        p1_7.setAlignmentX(0.1F);
        p1_7.setAlignmentY(0.1F);
        p1_7.setMaximumSize(new java.awt.Dimension(100, 100));
        p1_7.setMinimumSize(new java.awt.Dimension(80, 80));
        p1_7.setPreferredSize(new java.awt.Dimension(90, 90));

        lD1_7.setText("lD1_1");
        lD1_7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD1_7MouseClicked(evt);
            }
        });

        lH1_7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH1_7.setText("l1_1H");

        javax.swing.GroupLayout p1_7Layout = new javax.swing.GroupLayout(p1_7);
        p1_7.setLayout(p1_7Layout);
        p1_7Layout.setHorizontalGroup(
            p1_7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p1_7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD1_7)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p1_7Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH1_7)
                .addContainerGap())
        );
        p1_7Layout.setVerticalGroup(
            p1_7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p1_7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD1_7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH1_7)
                .addContainerGap())
        );

        lpCalendar.add(p1_7);
        p1_7.setBounds(570, 40, 90, 90);

        p1_6.setBackground(new java.awt.Color(255, 255, 255));
        p1_6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p1_6.setToolTipText("");
        p1_6.setAlignmentX(0.1F);
        p1_6.setAlignmentY(0.1F);
        p1_6.setMaximumSize(new java.awt.Dimension(100, 100));
        p1_6.setMinimumSize(new java.awt.Dimension(80, 80));
        p1_6.setPreferredSize(new java.awt.Dimension(90, 90));

        lD1_6.setText("lD1_1");
        lD1_6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD1_6MouseClicked(evt);
            }
        });

        lH1_6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH1_6.setText("l1_1H");

        javax.swing.GroupLayout p1_6Layout = new javax.swing.GroupLayout(p1_6);
        p1_6.setLayout(p1_6Layout);
        p1_6Layout.setHorizontalGroup(
            p1_6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p1_6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD1_6)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p1_6Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH1_6)
                .addContainerGap())
        );
        p1_6Layout.setVerticalGroup(
            p1_6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p1_6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD1_6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH1_6)
                .addContainerGap())
        );

        lpCalendar.add(p1_6);
        p1_6.setBounds(480, 40, 90, 90);

        p1_5.setBackground(new java.awt.Color(255, 255, 255));
        p1_5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p1_5.setToolTipText("");
        p1_5.setAlignmentX(0.1F);
        p1_5.setAlignmentY(0.1F);
        p1_5.setMaximumSize(new java.awt.Dimension(100, 100));
        p1_5.setMinimumSize(new java.awt.Dimension(80, 80));
        p1_5.setPreferredSize(new java.awt.Dimension(90, 90));

        lH1_5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH1_5.setText("l1_1H");

        lD1_5.setText("lD1_1");
        lD1_5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD1_5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p1_5Layout = new javax.swing.GroupLayout(p1_5);
        p1_5.setLayout(p1_5Layout);
        p1_5Layout.setHorizontalGroup(
            p1_5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p1_5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD1_5)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p1_5Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH1_5)
                .addContainerGap())
        );
        p1_5Layout.setVerticalGroup(
            p1_5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p1_5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD1_5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH1_5)
                .addContainerGap())
        );

        lpCalendar.add(p1_5);
        p1_5.setBounds(390, 40, 90, 90);

        lThuCol.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lThuCol.setText("THU");
        lpCalendar.add(lThuCol);
        lThuCol.setBounds(390, 20, 90, 14);

        lWedCol.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lWedCol.setText("WED");
        lpCalendar.add(lWedCol);
        lWedCol.setBounds(300, 20, 90, 14);

        lFriCol.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lFriCol.setText("FRI");
        lpCalendar.add(lFriCol);
        lFriCol.setBounds(480, 20, 90, 14);

        lSunCol.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lSunCol.setText("SUN");
        lpCalendar.add(lSunCol);
        lSunCol.setBounds(30, 20, 90, 14);

        lMonCol.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lMonCol.setText("MON");
        lpCalendar.add(lMonCol);
        lMonCol.setBounds(130, 20, 80, 14);

        lTueCol.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lTueCol.setText("TUE");
        lpCalendar.add(lTueCol);
        lTueCol.setBounds(210, 20, 90, 14);

        lSatCol.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lSatCol.setText("SAT");
        lpCalendar.add(lSatCol);
        lSatCol.setBounds(570, 20, 90, 14);

        p2_5.setBackground(new java.awt.Color(255, 255, 255));
        p2_5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p2_5.setToolTipText("");
        p2_5.setAlignmentX(0.1F);
        p2_5.setAlignmentY(0.1F);
        p2_5.setMaximumSize(new java.awt.Dimension(100, 100));
        p2_5.setMinimumSize(new java.awt.Dimension(80, 80));
        p2_5.setPreferredSize(new java.awt.Dimension(90, 90));

        lH2_5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH2_5.setText("l1_1H");

        lD2_5.setText("lD1_1");
        lD2_5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD2_5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p2_5Layout = new javax.swing.GroupLayout(p2_5);
        p2_5.setLayout(p2_5Layout);
        p2_5Layout.setHorizontalGroup(
            p2_5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p2_5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD2_5)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p2_5Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH2_5)
                .addContainerGap())
        );
        p2_5Layout.setVerticalGroup(
            p2_5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p2_5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD2_5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH2_5)
                .addContainerGap())
        );

        lpCalendar.add(p2_5);
        p2_5.setBounds(390, 130, 90, 90);

        p2_7.setBackground(new java.awt.Color(255, 255, 153));
        p2_7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p2_7.setToolTipText("");
        p2_7.setAlignmentX(0.1F);
        p2_7.setAlignmentY(0.1F);
        p2_7.setMaximumSize(new java.awt.Dimension(100, 100));
        p2_7.setMinimumSize(new java.awt.Dimension(80, 80));
        p2_7.setPreferredSize(new java.awt.Dimension(90, 90));

        lH2_7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH2_7.setText("l1_1H");

        lD2_7.setText("lD1_1");
        lD2_7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD2_7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p2_7Layout = new javax.swing.GroupLayout(p2_7);
        p2_7.setLayout(p2_7Layout);
        p2_7Layout.setHorizontalGroup(
            p2_7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p2_7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD2_7)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p2_7Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH2_7)
                .addContainerGap())
        );
        p2_7Layout.setVerticalGroup(
            p2_7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p2_7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD2_7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH2_7)
                .addContainerGap())
        );

        lpCalendar.add(p2_7);
        p2_7.setBounds(570, 130, 90, 90);

        bWeek5.setText("Time Card");
        bWeek5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bWeek5ActionPerformed(evt);
            }
        });
        lpCalendar.add(bWeek5);
        bWeek5.setBounds(670, 460, 100, 23);

        bWeek4.setText("Time Card");
        bWeek4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bWeek4ActionPerformed(evt);
            }
        });
        lpCalendar.add(bWeek4);
        bWeek4.setBounds(670, 370, 100, 23);

        bExport1.setText("Export");
        bExport1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExport1ActionPerformed(evt);
            }
        });
        lpCalendar.add(bExport1);
        bExport1.setBounds(670, 70, 100, 23);

        bWeek1.setText("Time Card");
        bWeek1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bWeek1ActionPerformed(evt);
            }
        });
        lpCalendar.add(bWeek1);
        bWeek1.setBounds(670, 100, 100, 23);

        bWeek3.setText("Time Card");
        bWeek3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bWeek3ActionPerformed(evt);
            }
        });
        lpCalendar.add(bWeek3);
        bWeek3.setBounds(670, 280, 100, 23);

        bWeek2.setText("Time Card");
        bWeek2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bWeek2ActionPerformed(evt);
            }
        });
        lpCalendar.add(bWeek2);
        bWeek2.setBounds(670, 190, 100, 23);

        p4_5.setBackground(new java.awt.Color(255, 255, 255));
        p4_5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p4_5.setToolTipText("");
        p4_5.setAlignmentX(0.1F);
        p4_5.setAlignmentY(0.1F);
        p4_5.setMaximumSize(new java.awt.Dimension(100, 100));
        p4_5.setMinimumSize(new java.awt.Dimension(80, 80));
        p4_5.setPreferredSize(new java.awt.Dimension(90, 90));

        lH4_5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH4_5.setText("l1_1H");

        lD4_5.setText("lD1_1");
        lD4_5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD4_5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p4_5Layout = new javax.swing.GroupLayout(p4_5);
        p4_5.setLayout(p4_5Layout);
        p4_5Layout.setHorizontalGroup(
            p4_5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p4_5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD4_5)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p4_5Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH4_5)
                .addContainerGap())
        );
        p4_5Layout.setVerticalGroup(
            p4_5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p4_5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD4_5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH4_5)
                .addContainerGap())
        );

        lpCalendar.add(p4_5);
        p4_5.setBounds(390, 310, 90, 90);

        bExport2.setText("Export");
        bExport2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExport2ActionPerformed(evt);
            }
        });
        lpCalendar.add(bExport2);
        bExport2.setBounds(670, 160, 100, 23);

        bExport3.setText("Export");
        bExport3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExport3ActionPerformed(evt);
            }
        });
        lpCalendar.add(bExport3);
        bExport3.setBounds(670, 250, 100, 23);

        p3_6.setBackground(new java.awt.Color(255, 255, 255));
        p3_6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p3_6.setToolTipText("");
        p3_6.setAlignmentX(0.1F);
        p3_6.setAlignmentY(0.1F);
        p3_6.setMaximumSize(new java.awt.Dimension(100, 100));
        p3_6.setMinimumSize(new java.awt.Dimension(80, 80));
        p3_6.setPreferredSize(new java.awt.Dimension(90, 90));

        lH3_6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH3_6.setText("l1_1H");

        lD3_6.setText("lD1_1");
        lD3_6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD3_6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p3_6Layout = new javax.swing.GroupLayout(p3_6);
        p3_6.setLayout(p3_6Layout);
        p3_6Layout.setHorizontalGroup(
            p3_6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p3_6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD3_6)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p3_6Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH3_6)
                .addContainerGap())
        );
        p3_6Layout.setVerticalGroup(
            p3_6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p3_6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD3_6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH3_6)
                .addContainerGap())
        );

        lpCalendar.add(p3_6);
        p3_6.setBounds(480, 220, 90, 90);

        p3_4.setBackground(new java.awt.Color(255, 255, 255));
        p3_4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p3_4.setToolTipText("");
        p3_4.setAlignmentX(0.1F);
        p3_4.setAlignmentY(0.1F);
        p3_4.setMaximumSize(new java.awt.Dimension(100, 100));
        p3_4.setMinimumSize(new java.awt.Dimension(80, 80));
        p3_4.setPreferredSize(new java.awt.Dimension(90, 90));

        lH3_4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH3_4.setText("l1_1H");

        lD3_4.setText("lD1_1");
        lD3_4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD3_4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p3_4Layout = new javax.swing.GroupLayout(p3_4);
        p3_4.setLayout(p3_4Layout);
        p3_4Layout.setHorizontalGroup(
            p3_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p3_4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD3_4)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p3_4Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH3_4)
                .addContainerGap())
        );
        p3_4Layout.setVerticalGroup(
            p3_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p3_4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD3_4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH3_4)
                .addContainerGap())
        );

        lpCalendar.add(p3_4);
        p3_4.setBounds(300, 220, 90, 90);

        bExport4.setText("Export");
        bExport4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExport4ActionPerformed(evt);
            }
        });
        lpCalendar.add(bExport4);
        bExport4.setBounds(670, 340, 100, 23);

        bExport5.setText("Export");
        bExport5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExport5ActionPerformed(evt);
            }
        });
        lpCalendar.add(bExport5);
        bExport5.setBounds(670, 430, 100, 23);

        p5_7.setBackground(new java.awt.Color(255, 255, 153));
        p5_7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p5_7.setToolTipText("");
        p5_7.setAlignmentX(0.1F);
        p5_7.setAlignmentY(0.1F);
        p5_7.setMaximumSize(new java.awt.Dimension(100, 100));
        p5_7.setMinimumSize(new java.awt.Dimension(80, 80));
        p5_7.setPreferredSize(new java.awt.Dimension(90, 90));

        lH5_7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH5_7.setText("l1_1H");

        lD5_7.setText("lD1_1");
        lD5_7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD5_7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p5_7Layout = new javax.swing.GroupLayout(p5_7);
        p5_7.setLayout(p5_7Layout);
        p5_7Layout.setHorizontalGroup(
            p5_7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p5_7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD5_7)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p5_7Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH5_7)
                .addContainerGap())
        );
        p5_7Layout.setVerticalGroup(
            p5_7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p5_7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD5_7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH5_7)
                .addContainerGap())
        );

        lpCalendar.add(p5_7);
        p5_7.setBounds(570, 400, 90, 90);

        p3_5.setBackground(new java.awt.Color(255, 255, 255));
        p3_5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p3_5.setToolTipText("");
        p3_5.setAlignmentX(0.1F);
        p3_5.setAlignmentY(0.1F);
        p3_5.setMaximumSize(new java.awt.Dimension(100, 100));
        p3_5.setMinimumSize(new java.awt.Dimension(80, 80));
        p3_5.setPreferredSize(new java.awt.Dimension(90, 90));

        lH3_5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH3_5.setText("l1_1H");

        lD3_5.setText("lD1_1");
        lD3_5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD3_5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p3_5Layout = new javax.swing.GroupLayout(p3_5);
        p3_5.setLayout(p3_5Layout);
        p3_5Layout.setHorizontalGroup(
            p3_5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p3_5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD3_5)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p3_5Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH3_5)
                .addContainerGap())
        );
        p3_5Layout.setVerticalGroup(
            p3_5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p3_5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD3_5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH3_5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        lpCalendar.add(p3_5);
        p3_5.setBounds(390, 220, 90, 90);

        p3_7.setBackground(new java.awt.Color(255, 255, 153));
        p3_7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p3_7.setToolTipText("");
        p3_7.setAlignmentX(0.1F);
        p3_7.setAlignmentY(0.1F);
        p3_7.setMaximumSize(new java.awt.Dimension(100, 100));
        p3_7.setMinimumSize(new java.awt.Dimension(80, 80));
        p3_7.setPreferredSize(new java.awt.Dimension(90, 90));

        lH3_7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH3_7.setText("l1_1H");

        lD3_7.setText("lD1_1");
        lD3_7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD3_7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p3_7Layout = new javax.swing.GroupLayout(p3_7);
        p3_7.setLayout(p3_7Layout);
        p3_7Layout.setHorizontalGroup(
            p3_7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p3_7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD3_7)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p3_7Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH3_7)
                .addContainerGap())
        );
        p3_7Layout.setVerticalGroup(
            p3_7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p3_7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD3_7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH3_7)
                .addContainerGap())
        );

        lpCalendar.add(p3_7);
        p3_7.setBounds(570, 220, 90, 90);

        p5_5.setBackground(new java.awt.Color(255, 255, 255));
        p5_5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p5_5.setToolTipText("");
        p5_5.setAlignmentX(0.1F);
        p5_5.setAlignmentY(0.1F);
        p5_5.setMaximumSize(new java.awt.Dimension(100, 100));
        p5_5.setMinimumSize(new java.awt.Dimension(80, 80));
        p5_5.setPreferredSize(new java.awt.Dimension(90, 90));

        lH5_5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH5_5.setText("l1_1H");

        lD5_5.setText("lD1_1");
        lD5_5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD5_5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p5_5Layout = new javax.swing.GroupLayout(p5_5);
        p5_5.setLayout(p5_5Layout);
        p5_5Layout.setHorizontalGroup(
            p5_5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p5_5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD5_5)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p5_5Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH5_5)
                .addContainerGap())
        );
        p5_5Layout.setVerticalGroup(
            p5_5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p5_5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD5_5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH5_5)
                .addContainerGap())
        );

        lpCalendar.add(p5_5);
        p5_5.setBounds(390, 400, 90, 90);

        p2_6.setBackground(new java.awt.Color(255, 255, 255));
        p2_6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p2_6.setToolTipText("");
        p2_6.setAlignmentX(0.1F);
        p2_6.setAlignmentY(0.1F);
        p2_6.setMaximumSize(new java.awt.Dimension(100, 100));
        p2_6.setMinimumSize(new java.awt.Dimension(80, 80));
        p2_6.setPreferredSize(new java.awt.Dimension(90, 90));

        lH2_6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH2_6.setText("l1_1H");

        lD2_6.setText("lD1_1");
        lD2_6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD2_6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p2_6Layout = new javax.swing.GroupLayout(p2_6);
        p2_6.setLayout(p2_6Layout);
        p2_6Layout.setHorizontalGroup(
            p2_6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p2_6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD2_6)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p2_6Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH2_6)
                .addContainerGap())
        );
        p2_6Layout.setVerticalGroup(
            p2_6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p2_6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD2_6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH2_6)
                .addContainerGap())
        );

        lpCalendar.add(p2_6);
        p2_6.setBounds(480, 130, 90, 90);

        p2_4.setBackground(new java.awt.Color(255, 255, 255));
        p2_4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p2_4.setToolTipText("");
        p2_4.setAlignmentX(0.1F);
        p2_4.setAlignmentY(0.1F);
        p2_4.setMaximumSize(new java.awt.Dimension(100, 100));
        p2_4.setMinimumSize(new java.awt.Dimension(80, 80));
        p2_4.setPreferredSize(new java.awt.Dimension(90, 90));

        lH2_4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH2_4.setText("l1_1H");

        lD2_4.setText("lD1_1");
        lD2_4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD2_4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p2_4Layout = new javax.swing.GroupLayout(p2_4);
        p2_4.setLayout(p2_4Layout);
        p2_4Layout.setHorizontalGroup(
            p2_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p2_4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD2_4)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p2_4Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH2_4)
                .addContainerGap())
        );
        p2_4Layout.setVerticalGroup(
            p2_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p2_4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD2_4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH2_4)
                .addContainerGap())
        );

        lpCalendar.add(p2_4);
        p2_4.setBounds(300, 130, 90, 90);

        p4_7.setBackground(new java.awt.Color(255, 255, 153));
        p4_7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p4_7.setToolTipText("");
        p4_7.setAlignmentX(0.1F);
        p4_7.setAlignmentY(0.1F);
        p4_7.setMaximumSize(new java.awt.Dimension(100, 100));
        p4_7.setMinimumSize(new java.awt.Dimension(80, 80));
        p4_7.setPreferredSize(new java.awt.Dimension(90, 90));

        lH4_7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH4_7.setText("l1_1H");

        lD4_7.setText("lD1_1");
        lD4_7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD4_7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p4_7Layout = new javax.swing.GroupLayout(p4_7);
        p4_7.setLayout(p4_7Layout);
        p4_7Layout.setHorizontalGroup(
            p4_7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p4_7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD4_7)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p4_7Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH4_7)
                .addContainerGap())
        );
        p4_7Layout.setVerticalGroup(
            p4_7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p4_7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD4_7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH4_7)
                .addContainerGap())
        );

        lpCalendar.add(p4_7);
        p4_7.setBounds(570, 310, 90, 90);

        bNextWeek.setText("Next Week >>");
        bNextWeek.setToolTipText("Move calendar forward ONE week");
        bNextWeek.setPreferredSize(new java.awt.Dimension(103, 23));
        bNextWeek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNextWeekActionPerformed(evt);
            }
        });
        lpCalendar.add(bNextWeek);
        bNextWeek.setBounds(480, 500, 186, 33);

        p4_6.setBackground(new java.awt.Color(255, 255, 255));
        p4_6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p4_6.setToolTipText("");
        p4_6.setAlignmentX(0.1F);
        p4_6.setAlignmentY(0.1F);
        p4_6.setMaximumSize(new java.awt.Dimension(100, 100));
        p4_6.setMinimumSize(new java.awt.Dimension(80, 80));
        p4_6.setPreferredSize(new java.awt.Dimension(90, 90));

        lH4_6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH4_6.setText("l1_1H");

        lD4_6.setText("lD1_1");
        lD4_6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD4_6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p4_6Layout = new javax.swing.GroupLayout(p4_6);
        p4_6.setLayout(p4_6Layout);
        p4_6Layout.setHorizontalGroup(
            p4_6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p4_6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD4_6)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p4_6Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH4_6)
                .addContainerGap())
        );
        p4_6Layout.setVerticalGroup(
            p4_6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p4_6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD4_6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH4_6)
                .addContainerGap())
        );

        lpCalendar.add(p4_6);
        p4_6.setBounds(480, 310, 90, 90);

        p5_6.setBackground(new java.awt.Color(255, 255, 255));
        p5_6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p5_6.setToolTipText("");
        p5_6.setAlignmentX(0.1F);
        p5_6.setAlignmentY(0.1F);
        p5_6.setMaximumSize(new java.awt.Dimension(100, 100));
        p5_6.setMinimumSize(new java.awt.Dimension(80, 80));
        p5_6.setPreferredSize(new java.awt.Dimension(90, 90));

        lH5_6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lH5_6.setText("l1_1H");

        lD5_6.setText("lD1_1");
        lD5_6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lD5_6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p5_6Layout = new javax.swing.GroupLayout(p5_6);
        p5_6.setLayout(p5_6Layout);
        p5_6Layout.setHorizontalGroup(
            p5_6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p5_6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD5_6)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p5_6Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lH5_6)
                .addContainerGap())
        );
        p5_6Layout.setVerticalGroup(
            p5_6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p5_6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lD5_6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(lH5_6)
                .addContainerGap())
        );

        lpCalendar.add(p5_6);
        p5_6.setBounds(480, 400, 90, 90);

        pTabbedPane.addTab("Calendar", null, lpCalendar, "");

        lpTimeCardWeek.setToolTipText("");

        bNextWeek2.setText("Next Week >>");
        bNextWeek2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNextWeek2ActionPerformed(evt);
            }
        });
        lpTimeCardWeek.add(bNextWeek2);
        bNextWeek2.setBounds(610, 490, 150, 30);

        bEditTCView.setText("Edit Time Card");
        bEditTCView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditTCViewActionPerformed(evt);
            }
        });
        lpTimeCardWeek.add(bEditTCView);
        bEditTCView.setBounds(420, 490, 150, 30);

        tpTimeCard.setEditable(false);
        tpTimeCard.setBackground(new java.awt.Color(212, 208, 200));
        tpTimeCard.setBorder(null);
        tpTimeCard.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        tpTimeCard.setToolTipText("Time Card Data displayed here");
        jScrollPane1.setViewportView(tpTimeCard);

        lpTimeCardWeek.add(jScrollPane1);
        jScrollPane1.setBounds(10, 114, 760, 360);

        bPrevWeek3.setText("<< Previous Week");
        bPrevWeek3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPrevWeek3ActionPerformed(evt);
            }
        });
        lpTimeCardWeek.add(bPrevWeek3);
        bPrevWeek3.setBounds(30, 490, 150, 30);

        lRange.setText("Date Range");
        lpTimeCardWeek.add(lRange);
        lRange.setBounds(10, 20, 70, 14);

        jLabel2.setText("Time Card Comment:");
        lpTimeCardWeek.add(jLabel2);
        jLabel2.setBounds(10, 50, 130, 14);

        lDateRange.setText("DateRange");
        lpTimeCardWeek.add(lDateRange);
        lDateRange.setBounds(80, 20, 210, 14);

        taComment.setBackground(new java.awt.Color(212, 208, 200));
        taComment.setColumns(60);
        taComment.setEditable(false);
        taComment.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        taComment.setRows(2);
        taComment.setToolTipText("Week Comment displayed here");
        jScrollPane2.setViewportView(taComment);

        lpTimeCardWeek.add(jScrollPane2);
        jScrollPane2.setBounds(10, 70, 760, 40);

        bExportTCView.setText("Export Time Card");
        bExportTCView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExportTCViewActionPerformed(evt);
            }
        });
        lpTimeCardWeek.add(bExportTCView);
        bExportTCView.setBounds(230, 490, 150, 30);

        pTabbedPane.addTab("Time Card", null, lpTimeCardWeek, "");

        lpOvertime.setEnabled(false);

        bPrevPayOT.setText("<< Previous Pay Period");
        bPrevPayOT.setToolTipText("Move back one pay period");
        bPrevPayOT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPrevPayOTActionPerformed(evt);
            }
        });
        lpOvertime.add(bPrevPayOT);
        bPrevPayOT.setBounds(30, 500, 180, 33);

        bNextPayOT.setText("Next Pay Period >>");
        bNextPayOT.setToolTipText("Move calendar forward ONE week");
        bNextPayOT.setPreferredSize(new java.awt.Dimension(103, 23));
        bNextPayOT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNextPayOTActionPerformed(evt);
            }
        });
        lpOvertime.add(bNextPayOT);
        bNextPayOT.setBounds(560, 500, 186, 33);

        tbSTw1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tbSTw1.setText("0.0");
        lpOvertime.add(tbSTw1);
        tbSTw1.setBounds(670, 50, 60, 20);

        tbDTw1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tbDTw1.setText("0.0");
        lpOvertime.add(tbDTw1);
        tbDTw1.setBounds(670, 110, 59, 20);

        tbTHw1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tbTHw1.setText("0.0");
        lpOvertime.add(tbTHw1);
        tbTHw1.setBounds(670, 80, 60, 20);

        lDTw1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lDTw1.setForeground(java.awt.Color.blue);
        lDTw1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lDTw1.setText("Total Double Time");
        lpOvertime.add(lDTw1);
        lDTw1.setBounds(490, 110, 170, 17);

        lDTactualW1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lDTactualW1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lDTactualW1.setText("1000.00");
        lpOvertime.add(lDTactualW1);
        lDTactualW1.setBounds(260, 110, 70, 17);

        lSTEnteredW1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lSTEnteredW1.setForeground(java.awt.Color.blue);
        lSTEnteredW1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lSTEnteredW1.setText("Total Straight Time OT");
        lpOvertime.add(lSTEnteredW1);
        lSTEnteredW1.setBounds(30, 50, 210, 17);

        lTHw1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lTHw1.setForeground(java.awt.Color.blue);
        lTHw1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lTHw1.setText("Total Time and Half");
        lpOvertime.add(lTHw1);
        lTHw1.setBounds(510, 80, 150, 17);

        bCreateRptW3.setText("Create Report");
        bCreateRptW3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCreateRptW3ActionPerformed(evt);
            }
        });
        lpOvertime.add(bCreateRptW3);
        bCreateRptW3.setBounds(40, 460, 170, 23);

        lPayDateW1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lPayDateW1.setForeground(new java.awt.Color(255, 0, 0));
        lPayDateW1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lPayDateW1.setText("1 January 2011");
        lpOvertime.add(lPayDateW1);
        lPayDateW1.setBounds(550, 140, 180, 17);

        lEnteredW1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lEnteredW1.setForeground(java.awt.Color.blue);
        lEnteredW1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lEnteredW1.setText("Actual OT For Time Period:");
        lpOvertime.add(lEnteredW1);
        lEnteredW1.setBounds(60, 20, 190, 17);

        lSTw1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lSTw1.setForeground(java.awt.Color.blue);
        lSTw1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lSTw1.setText("Total Straight Time");
        lpOvertime.add(lSTw1);
        lSTw1.setBounds(510, 50, 150, 17);

        lTHEnteredW1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lTHEnteredW1.setForeground(java.awt.Color.blue);
        lTHEnteredW1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lTHEnteredW1.setText("Total Time and Half OT");
        lpOvertime.add(lTHEnteredW1);
        lTHEnteredW1.setBounds(30, 80, 210, 17);

        lDTEnteredW1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lDTEnteredW1.setForeground(java.awt.Color.blue);
        lDTEnteredW1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lDTEnteredW1.setText("Total Double Time OT");
        lpOvertime.add(lDTEnteredW1);
        lDTEnteredW1.setBounds(10, 110, 230, 17);

        lDateRangeW1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lDateRangeW1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lDateRangeW1.setText("1 December 2010 - 15 December 2010");
        lpOvertime.add(lDateRangeW1);
        lDateRangeW1.setBounds(260, 20, 330, 17);

        lSTactualW1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lSTactualW1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lSTactualW1.setText("1000.00");
        lpOvertime.add(lSTactualW1);
        lSTactualW1.setBounds(260, 50, 70, 17);

        lTHactualW1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lTHactualW1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lTHactualW1.setText("1000.00");
        lpOvertime.add(lTHactualW1);
        lTHactualW1.setBounds(260, 80, 70, 17);

        lTHhrsW1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lTHhrsW1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lTHhrsW1.setText("Hrs");
        lpOvertime.add(lTHhrsW1);
        lTHhrsW1.setBounds(340, 80, 70, 17);

        lDThrsW1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lDThrsW1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lDThrsW1.setText("Hrs");
        lpOvertime.add(lDThrsW1);
        lDThrsW1.setBounds(340, 110, 70, 17);

        lSThrsW1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lSThrsW1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lSThrsW1.setText("Hrs");
        lpOvertime.add(lSThrsW1);
        lSThrsW1.setBounds(340, 50, 70, 17);

        lEnteredW2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lEnteredW2.setForeground(java.awt.Color.blue);
        lEnteredW2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lEnteredW2.setText("Actual OT For Time Period:");
        lpOvertime.add(lEnteredW2);
        lEnteredW2.setBounds(60, 180, 190, 17);

        lSTEnteredW2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lSTEnteredW2.setForeground(java.awt.Color.blue);
        lSTEnteredW2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lSTEnteredW2.setText("Total Straight Time OT");
        lpOvertime.add(lSTEnteredW2);
        lSTEnteredW2.setBounds(30, 210, 210, 17);

        lTHEnteredW2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lTHEnteredW2.setForeground(java.awt.Color.blue);
        lTHEnteredW2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lTHEnteredW2.setText("Total Time and Half OT");
        lpOvertime.add(lTHEnteredW2);
        lTHEnteredW2.setBounds(30, 240, 210, 17);

        lDTEnteredW2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lDTEnteredW2.setForeground(java.awt.Color.blue);
        lDTEnteredW2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lDTEnteredW2.setText("Total Double Time OT");
        lpOvertime.add(lDTEnteredW2);
        lDTEnteredW2.setBounds(10, 270, 230, 17);

        lDTactualW2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lDTactualW2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lDTactualW2.setText("1000.00");
        lpOvertime.add(lDTactualW2);
        lDTactualW2.setBounds(260, 270, 70, 17);

        lTHactualW2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lTHactualW2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lTHactualW2.setText("1000.00");
        lpOvertime.add(lTHactualW2);
        lTHactualW2.setBounds(260, 240, 70, 17);

        lSTactualW2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lSTactualW2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lSTactualW2.setText("1000.00");
        lpOvertime.add(lSTactualW2);
        lSTactualW2.setBounds(260, 210, 70, 17);

        lDateRangeW2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lDateRangeW2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lDateRangeW2.setText("1 December 2010 - 15 December 2010");
        lpOvertime.add(lDateRangeW2);
        lDateRangeW2.setBounds(260, 180, 330, 17);

        lSThrsW2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lSThrsW2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lSThrsW2.setText("Hrs");
        lpOvertime.add(lSThrsW2);
        lSThrsW2.setBounds(340, 210, 70, 17);

        lTHhrsW2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lTHhrsW2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lTHhrsW2.setText("Hrs");
        lpOvertime.add(lTHhrsW2);
        lTHhrsW2.setBounds(340, 240, 70, 17);

        lDThrsW2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lDThrsW2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lDThrsW2.setText("Hrs");
        lpOvertime.add(lDThrsW2);
        lDThrsW2.setBounds(340, 270, 70, 17);

        bSaveChangesW2.setText("Save Pay Changes");
        bSaveChangesW2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveChangesW2ActionPerformed(evt);
            }
        });
        lpOvertime.add(bSaveChangesW2);
        bSaveChangesW2.setBounds(210, 300, 170, 23);

        lDTw2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lDTw2.setForeground(java.awt.Color.blue);
        lDTw2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lDTw2.setText("Total Double Time");
        lpOvertime.add(lDTw2);
        lDTw2.setBounds(490, 270, 170, 17);

        lTHw2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lTHw2.setForeground(java.awt.Color.blue);
        lTHw2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lTHw2.setText("Total Time and Half");
        lpOvertime.add(lTHw2);
        lTHw2.setBounds(510, 240, 150, 17);

        lSTw2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lSTw2.setForeground(java.awt.Color.blue);
        lSTw2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lSTw2.setText("Total Straight Time");
        lpOvertime.add(lSTw2);
        lSTw2.setBounds(510, 210, 150, 17);

        lPayW2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lPayW2.setForeground(java.awt.Color.blue);
        lPayW2.setText("Pay Stub OT Payout");
        lpOvertime.add(lPayW2);
        lPayW2.setBounds(590, 180, 140, 17);

        tbSTw2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tbSTw2.setText("0.0");
        lpOvertime.add(tbSTw2);
        tbSTw2.setBounds(670, 210, 60, 20);

        tbTHw2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tbTHw2.setText("0.0");
        lpOvertime.add(tbTHw2);
        tbTHw2.setBounds(670, 240, 60, 20);

        tbDTw2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tbDTw2.setText("0.0");
        lpOvertime.add(tbDTw2);
        tbDTw2.setBounds(670, 270, 59, 20);

        lEnteredW3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lEnteredW3.setForeground(java.awt.Color.blue);
        lEnteredW3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lEnteredW3.setText("Actual OT For Time Period:");
        lpOvertime.add(lEnteredW3);
        lEnteredW3.setBounds(60, 340, 190, 17);

        lSTEnteredW3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lSTEnteredW3.setForeground(java.awt.Color.blue);
        lSTEnteredW3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lSTEnteredW3.setText("Total Straight Time OT");
        lpOvertime.add(lSTEnteredW3);
        lSTEnteredW3.setBounds(30, 370, 210, 17);

        lTHEnteredW3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lTHEnteredW3.setForeground(java.awt.Color.blue);
        lTHEnteredW3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lTHEnteredW3.setText("Total Time and Half OT");
        lpOvertime.add(lTHEnteredW3);
        lTHEnteredW3.setBounds(30, 400, 210, 17);

        lDTEnteredW3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lDTEnteredW3.setForeground(java.awt.Color.blue);
        lDTEnteredW3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lDTEnteredW3.setText("Total Double Time OT");
        lpOvertime.add(lDTEnteredW3);
        lDTEnteredW3.setBounds(10, 430, 230, 17);

        lDTactualW3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lDTactualW3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lDTactualW3.setText("1000.00");
        lpOvertime.add(lDTactualW3);
        lDTactualW3.setBounds(260, 430, 70, 17);

        lTHactualW3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lTHactualW3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lTHactualW3.setText("1000.00");
        lpOvertime.add(lTHactualW3);
        lTHactualW3.setBounds(260, 400, 70, 17);

        lSTactualW3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lSTactualW3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lSTactualW3.setText("1000.00");
        lpOvertime.add(lSTactualW3);
        lSTactualW3.setBounds(260, 370, 70, 17);

        lDateRangeW3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lDateRangeW3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lDateRangeW3.setText("1 December 2010 - 15 December 2010");
        lpOvertime.add(lDateRangeW3);
        lDateRangeW3.setBounds(260, 340, 330, 17);

        lSThrsW3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lSThrsW3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lSThrsW3.setText("Hrs");
        lpOvertime.add(lSThrsW3);
        lSThrsW3.setBounds(340, 370, 70, 17);

        lTHhrsW3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lTHhrsW3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lTHhrsW3.setText("Hrs");
        lpOvertime.add(lTHhrsW3);
        lTHhrsW3.setBounds(340, 400, 70, 17);

        lDThrsW3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lDThrsW3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lDThrsW3.setText("Hrs");
        lpOvertime.add(lDThrsW3);
        lDThrsW3.setBounds(340, 430, 70, 17);

        bSaveChangesW3.setText("Save Pay Changes");
        bSaveChangesW3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveChangesW3ActionPerformed(evt);
            }
        });
        lpOvertime.add(bSaveChangesW3);
        bSaveChangesW3.setBounds(210, 460, 170, 23);

        lDTw3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lDTw3.setForeground(java.awt.Color.blue);
        lDTw3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lDTw3.setText("Total Double Time");
        lpOvertime.add(lDTw3);
        lDTw3.setBounds(490, 430, 170, 17);

        lTHw3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lTHw3.setForeground(java.awt.Color.blue);
        lTHw3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lTHw3.setText("Total Time and Half");
        lpOvertime.add(lTHw3);
        lTHw3.setBounds(510, 400, 150, 17);

        lSTw3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lSTw3.setForeground(java.awt.Color.blue);
        lSTw3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lSTw3.setText("Total Straight Time");
        lpOvertime.add(lSTw3);
        lSTw3.setBounds(510, 370, 150, 17);

        lPayW3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lPayW3.setForeground(java.awt.Color.blue);
        lPayW3.setText("Pay Stub OT Payout");
        lpOvertime.add(lPayW3);
        lPayW3.setBounds(590, 340, 140, 17);

        tbSTw3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tbSTw3.setText("0.0");
        lpOvertime.add(tbSTw3);
        tbSTw3.setBounds(670, 370, 60, 20);

        tbTHw3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tbTHw3.setText("0.0");
        lpOvertime.add(tbTHw3);
        tbTHw3.setBounds(670, 400, 60, 20);

        tbDTw3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tbDTw3.setText("0.0");
        lpOvertime.add(tbDTw3);
        tbDTw3.setBounds(670, 430, 59, 20);

        bSaveChangesW1.setText("Save Pay Changes");
        bSaveChangesW1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveChangesW1ActionPerformed(evt);
            }
        });
        lpOvertime.add(bSaveChangesW1);
        bSaveChangesW1.setBounds(210, 140, 170, 23);

        bCreateRptW1.setText("Create Report");
        bCreateRptW1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCreateRptW1ActionPerformed(evt);
            }
        });
        lpOvertime.add(bCreateRptW1);
        bCreateRptW1.setBounds(40, 140, 170, 23);

        bCreateRptW2.setText("Create Report");
        bCreateRptW2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCreateRptW2ActionPerformed(evt);
            }
        });
        lpOvertime.add(bCreateRptW2);
        bCreateRptW2.setBounds(40, 300, 170, 23);

        lPayW4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lPayW4.setForeground(java.awt.Color.blue);
        lPayW4.setText("Pay Stub OT Payout");
        lpOvertime.add(lPayW4);
        lPayW4.setBounds(590, 20, 140, 17);

        lPayDateLblW1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lPayDateLblW1.setForeground(new java.awt.Color(255, 0, 0));
        lPayDateLblW1.setText("Pay Date:");
        lpOvertime.add(lPayDateLblW1);
        lPayDateLblW1.setBounds(480, 140, 70, 17);
        lpOvertime.add(sep3);
        sep3.setBounds(30, 490, 710, 10);
        lpOvertime.add(sep1);
        sep1.setBounds(30, 170, 710, 10);
        lpOvertime.add(sep2);
        sep2.setBounds(30, 330, 710, 10);

        lPayDateLblW2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lPayDateLblW2.setForeground(new java.awt.Color(255, 0, 0));
        lPayDateLblW2.setText("Pay Date:");
        lpOvertime.add(lPayDateLblW2);
        lPayDateLblW2.setBounds(480, 300, 70, 17);

        lPayDateW2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lPayDateW2.setForeground(new java.awt.Color(255, 0, 0));
        lPayDateW2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lPayDateW2.setText("1 January 2011");
        lpOvertime.add(lPayDateW2);
        lPayDateW2.setBounds(550, 300, 180, 17);

        lPayDateLblW3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lPayDateLblW3.setForeground(new java.awt.Color(255, 0, 0));
        lPayDateLblW3.setText("Pay Date:");
        lpOvertime.add(lPayDateLblW3);
        lPayDateLblW3.setBounds(480, 460, 70, 17);

        lPayDateW3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lPayDateW3.setForeground(new java.awt.Color(255, 0, 0));
        lPayDateW3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lPayDateW3.setText("1 January 2011");
        lpOvertime.add(lPayDateW3);
        lPayDateW3.setBounds(550, 460, 180, 17);

        bLongReport.setText("Generate OT Balance Sheet");
        bLongReport.setToolTipText("");
        bLongReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLongReportActionPerformed(evt);
            }
        });
        lpOvertime.add(bLongReport);
        bLongReport.setBounds(270, 500, 200, 33);

        pTabbedPane.addTab("Overtime", lpOvertime);

        jLabel1.setText("Current Date/Time:");

        jMenu1.setText("File");

        miSettings.setText("Settings");
        miSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSettingsActionPerformed(evt);
            }
        });
        jMenu1.add(miSettings);

        miExit.setText("Exit Application");
        miExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miExitActionPerformed(evt);
            }
        });
        jMenu1.add(miExit);

        jMenuBar1.add(jMenu1);

        mTools.setText("Tools");

        miSearch.setText("Search Database");
        miSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSearchActionPerformed(evt);
            }
        });
        mTools.add(miSearch);

        miProjectRpt.setText("Project Report");
        miProjectRpt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miProjectRptActionPerformed(evt);
            }
        });
        mTools.add(miProjectRpt);

        miOTTracker.setText("OT Tracker");
        miOTTracker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miOTTrackerActionPerformed(evt);
            }
        });
        mTools.add(miOTTracker);

        miDBManage.setText("Database Management");
        miDBManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miDBManageActionPerformed(evt);
            }
        });
        mTools.add(miDBManage);

        miImport.setText("Import Time Card *.CSV");
        miImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miImportActionPerformed(evt);
            }
        });
        mTools.add(miImport);

        jMenuBar1.add(mTools);

        mHelp.setText("Help");

        miHelpDoc.setText("Help Document");
        miHelpDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miHelpDocActionPerformed(evt);
            }
        });
        mHelp.add(miHelpDoc);

        miAbout.setText("About");
        miAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miAboutActionPerformed(evt);
            }
        });
        mHelp.add(miAbout);

        jMenuBar1.add(mHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lDateString, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bExit, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(pTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bExit)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(lDateString)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void populateOTview(int year, int week){

        otmResults = otm.getValues(week,year,sf.getUser(),sf.getManager());

        lDateRangeW1.setText(otmResults[0]);
        lDateRangeW2.setText(otmResults[1]);
        lDateRangeW3.setText(otmResults[2]);
        lPayDateW1.setText(otmResults[3]);
        lPayDateW2.setText(otmResults[4]);
        lPayDateW3.setText(otmResults[5]);
        lSTactualW1.setText(otmResults[6]);
        lSTactualW2.setText(otmResults[9]);
        lSTactualW3.setText(otmResults[12]);
        lTHactualW1.setText(otmResults[7]);
        lTHactualW2.setText(otmResults[10]);
        lTHactualW3.setText(otmResults[13]);
        lDTactualW1.setText(otmResults[8]);
        lDTactualW2.setText(otmResults[11]);
        lDTactualW3.setText(otmResults[14]);
        tbSTw1.setText(otmResults[15]);
        tbTHw1.setText(otmResults[16]);
        tbDTw1.setText(otmResults[17]);
        tbSTw2.setText(otmResults[18]);
        tbTHw2.setText(otmResults[19]);
        tbDTw2.setText(otmResults[20]);
        tbSTw3.setText(otmResults[21]);
        tbTHw3.setText(otmResults[22]);
        tbDTw3.setText(otmResults[23]);
        this.repaint();
        this.validate();

    }


    private void bExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExitActionPerformed
        if(this.sf != null)
            this.sf.dispose();

        this.instanceFile.delete();

        //otm.closeDBconn();
        if(dc1.isConnected())
            dc1.closeConnection();
        Runtime r = Runtime.getRuntime();
        r.gc();
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_bExitActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.instanceFile.delete();
        //otm.closeDBconn();
        if(dc1.isConnected())
            dc1.closeConnection();
        System.exit(0);
          
    }//GEN-LAST:event_formWindowClosing

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if(this.refresh)
        {
            initHourArray(this.year,this.weekNumber);
            setHours();
            if(this.pTabbedPane.getSelectedIndex()==1)
                populateTCView(this.year,this.weekNumber);
            this.refresh = false;
            this.repaint();
        }
    }//GEN-LAST:event_formWindowActivated

    private void miImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miImportActionPerformed
        if(this.tci == null||!this.tci.isShowing()){
            this.tci = new TimeCardImport();
            this.tci.setVisible(true);
            this.refresh = true;
        }
        else
            return;

    }//GEN-LAST:event_miImportActionPerformed

    private void miExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miExitActionPerformed
        this.instanceFile.delete();
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_miExitActionPerformed

    private void miSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSettingsActionPerformed
        if(!this.sf.isInitialized()){
            this.sf.initializeView();
        }
        this.sf.setVisible(true);
    }//GEN-LAST:event_miSettingsActionPerformed

    private void miAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miAboutActionPerformed
        JOptionPane.showMessageDialog(this, "Time Entry for Windows " +
                this.u.getVersion() + "\n" +
                "Coded in JAVA \n\n" +
                "by James M. Olson\n"+
                "EESS Birmingham, AL\n" +
                "Please report errors and bugs\n"+
                "Developer Email: jamesmolson@eaton.com", "About Time Entry for Windows",
                JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_miAboutActionPerformed

    private void miSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSearchActionPerformed
            if(this.searchForm==null||!this.searchForm.isShowing()){
                this.searchForm = new SearchDB();
                this.searchForm.setVisible(true);
            }
            else
                return;
    }//GEN-LAST:event_miSearchActionPerformed

    private void miHelpDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miHelpDocActionPerformed
        File helpFile = new File(this.sf.getProgramLocation()+ "\\HelpFile.pdf");

        if(helpFile.exists()){
            try{
                Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + helpFile);
            }catch(Exception e)
            {
                connectionErr(e);
            }
        }else
            JOptionPane.showMessageDialog(this, "Help file missing.\n" +
                    "HelpFile.pdf should exist in same directory as main applicaiton");

    }//GEN-LAST:event_miHelpDocActionPerformed

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
        this.refresh = true;
    }//GEN-LAST:event_formWindowLostFocus

    private void miProjectRptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miProjectRptActionPerformed
        Object result = JOptionPane.showInputDialog(this,
                "Enter Job/Project Number\n");


        if(result==null||result.toString().length()<=0){
            return;
        }else
        {
            result.toString().toUpperCase();
            ProjectReport pr = new ProjectReport(result.toString().toUpperCase());
            pr.setVisible(true);
        }
    }//GEN-LAST:event_miProjectRptActionPerformed

    private void miDBManageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miDBManageActionPerformed
        DBManager dbm = new DBManager();
        dbm.setVisible(true);
    }//GEN-LAST:event_miDBManageActionPerformed

    private void miOTTrackerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miOTTrackerActionPerformed
        if(this.ott == null||!this.ott.isShowing()){
            this.ott = new OtTracker();
            this.ott.setVisible(true);
            this.refresh = true;
        }
        else
            return;
    }//GEN-LAST:event_miOTTrackerActionPerformed

    private void pTabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_pTabbedPaneStateChanged
        int window = this.pTabbedPane.getSelectedIndex();

        //Calendar View Selected
        if(window==0&&this.refresh){
            initHourArray(this.year, this.weekNumber);
            setHours();
            setDates(this.now);
            //otm.closeDBconn();
        }

        //Time Card View Selected
        if(window==1){
            this.refresh = true;
            populateTCView(this.year,this.weekNumber);
            //otm.closeDBconn();
        }

        //OT View Selected
        if(window==2)
        {
            this.refresh = true;
            populateOTview(this.year,this.weekNumber);
        }
        this.repaint();
        this.validate();
}//GEN-LAST:event_pTabbedPaneStateChanged

    private void bExportTCViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExportTCViewActionPerformed
        Calendar working = (Calendar)this.now.clone();
        working.set(Calendar.DAY_OF_WEEK, 7);
        if(exportTC(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR)))
            JOptionPane.showMessageDialog(this, "TimeCard for week " +
                    Integer.toString(this.weekNumber) + " Exported to \n" +
                    this.sf.getExportLocation());
}//GEN-LAST:event_bExportTCViewActionPerformed

    private void bPrevWeek3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPrevWeek3ActionPerformed
        Calendar working = (Calendar)this.now.clone();
        this.now.add(Calendar.WEEK_OF_YEAR,-1);
        working.set(Calendar.DAY_OF_WEEK,7);
        working.add(Calendar.WEEK_OF_YEAR,-1);
        this.year = working.get(Calendar.YEAR);
        this.weekNumber = working.get(Calendar.WEEK_OF_YEAR);
        setDates(this.now);
        move(-1);
        populateTCView(this.year,this.weekNumber);
}//GEN-LAST:event_bPrevWeek3ActionPerformed

    private void bEditTCViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditTCViewActionPerformed
        Calendar working = (Calendar)this.now.clone();
        working.set(Calendar.DAY_OF_WEEK, 7);
        if(this.timeCard == null||!this.timeCard.isShowing()){
            this.timeCard = new TimeCardForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR));
            this.timeCard.setVisible(true);
            this.refresh = true;
        } else
            return;
}//GEN-LAST:event_bEditTCViewActionPerformed

    private void bNextWeek2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNextWeek2ActionPerformed
        Calendar working = (Calendar)this.now.clone();
        this.now.add(Calendar.WEEK_OF_YEAR,+1);
        working.set(Calendar.DAY_OF_WEEK,7);
        working.add(Calendar.WEEK_OF_YEAR, +1);
        this.year = working.get(Calendar.YEAR);
        this.weekNumber = working.get(Calendar.WEEK_OF_YEAR);
        setDates(this.now);
        move(+1);
        populateTCView(this.year,this.weekNumber);
}//GEN-LAST:event_bNextWeek2ActionPerformed

    private void lD5_6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD5_6MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 4);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),6);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD5_6MouseClicked

    private void lD4_6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD4_6MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 3);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),6);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD4_6MouseClicked

    private void bNextWeekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNextWeekActionPerformed
        Calendar working = (Calendar)this.now.clone();
        this.now.add(Calendar.WEEK_OF_YEAR,+1);
        working.set(Calendar.DAY_OF_WEEK, 7);
        working.add(Calendar.WEEK_OF_YEAR, +1);
        this.year = working.get(Calendar.YEAR);
        this.weekNumber = working.get(Calendar.WEEK_OF_YEAR);
        setDates(this.now);
        move(+1);
    }//GEN-LAST:event_bNextWeekActionPerformed

    private void lD4_7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD4_7MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 3);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),7);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD4_7MouseClicked

    private void lD2_4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD2_4MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 1);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),4);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD2_4MouseClicked

    private void lD2_6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD2_6MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 1);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),6);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD2_6MouseClicked

    private void lD5_5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD5_5MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 4);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),5);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD5_5MouseClicked

    private void lD3_7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD3_7MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 2);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),7);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD3_7MouseClicked

    private void lD3_5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD3_5MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 2);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),5);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD3_5MouseClicked

    private void lD5_7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD5_7MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 4);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),7);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD5_7MouseClicked

    private void bExport5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExport5ActionPerformed
        Calendar working = (Calendar)this.now.clone();
        working.add(Calendar.WEEK_OF_YEAR, +4);
        working.set(Calendar.DAY_OF_WEEK, 7);
        if(exportTC(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR)))
            JOptionPane.showMessageDialog(this, "TimeCard for week " +
                    Integer.toString(working.get(Calendar.WEEK_OF_YEAR)) + " Exported to \n" +
                    this.sf.getExportLocation());
}//GEN-LAST:event_bExport5ActionPerformed

    private void bExport4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExport4ActionPerformed
        Calendar working = (Calendar)this.now.clone();
        working.add(Calendar.WEEK_OF_YEAR, +3);
        working.set(Calendar.DAY_OF_WEEK, 7);
        if(exportTC(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR)))
            JOptionPane.showMessageDialog(this, "TimeCard for week " +
                    Integer.toString(working.get(Calendar.WEEK_OF_YEAR)) + " Exported to \n" +
                    this.sf.getExportLocation());
}//GEN-LAST:event_bExport4ActionPerformed

    private void lD3_4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD3_4MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 2);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),4);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD3_4MouseClicked

    private void lD3_6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD3_6MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 2);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),6);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD3_6MouseClicked

    private void bExport3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExport3ActionPerformed
        Calendar working = (Calendar)this.now.clone();
        working.add(Calendar.WEEK_OF_YEAR, +2);
        working.set(Calendar.DAY_OF_WEEK, 7);
        if(exportTC(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR)))
            JOptionPane.showMessageDialog(this, "TimeCard for week " +
                    Integer.toString(working.get(Calendar.WEEK_OF_YEAR)) + " Exported to \n" +
                    this.sf.getExportLocation());
}//GEN-LAST:event_bExport3ActionPerformed

    private void bExport2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExport2ActionPerformed
        Calendar working = (Calendar)this.now.clone();
        working.add(Calendar.WEEK_OF_YEAR, +1);
        working.set(Calendar.DAY_OF_WEEK, 7);
        if(exportTC(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR)))
            JOptionPane.showMessageDialog(this, "TimeCard for week " +
                    Integer.toString(working.get(Calendar.WEEK_OF_YEAR)) + " Exported to \n" +
                    this.sf.getExportLocation());
}//GEN-LAST:event_bExport2ActionPerformed

    private void lD4_5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD4_5MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 3);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),5);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD4_5MouseClicked

    private void bWeek2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bWeek2ActionPerformed
        if(this.timeCard == null||!this.timeCard.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR,+1);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.timeCard = new TimeCardForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR));
            this.timeCard.setVisible(true);
            this.refresh = true;
        } else
            return;
}//GEN-LAST:event_bWeek2ActionPerformed

    private void bWeek3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bWeek3ActionPerformed
        if(this.timeCard == null||!this.timeCard.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR,+2);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.timeCard = new TimeCardForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR));
            this.timeCard.setVisible(true);
            this.refresh = true;
        } else
            return;
}//GEN-LAST:event_bWeek3ActionPerformed

    private void bWeek1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bWeek1ActionPerformed
        if(this.timeCard == null||!this.timeCard.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.timeCard = new TimeCardForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR));
            this.timeCard.setVisible(true);
            this.refresh = true;
        } else
            return;
}//GEN-LAST:event_bWeek1ActionPerformed

    private void bExport1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExport1ActionPerformed
        Calendar working = (Calendar)this.now.clone();
        working.set(Calendar.DAY_OF_WEEK, 7);
        if(exportTC(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR)))
            JOptionPane.showMessageDialog(this, "TimeCard for week " +
                    Integer.toString(this.weekNumber) + " Exported to \n" +
                    this.sf.getExportLocation());
    }//GEN-LAST:event_bExport1ActionPerformed

    private void bWeek4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bWeek4ActionPerformed
        if(this.timeCard == null||!this.timeCard.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR,+3);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.timeCard = new TimeCardForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR));
            this.timeCard.setVisible(true);
            this.refresh = true;
        }else
            return;
}//GEN-LAST:event_bWeek4ActionPerformed

    private void bWeek5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bWeek5ActionPerformed
        if(this.timeCard == null||!this.timeCard.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR,+4);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.timeCard = new TimeCardForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR));
            this.timeCard.setVisible(true);
            this.refresh = true;
        } else
            return;
}//GEN-LAST:event_bWeek5ActionPerformed

    private void lD2_7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD2_7MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 1);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),7);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD2_7MouseClicked

    private void lD2_5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD2_5MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 1);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),5);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD2_5MouseClicked

    private void lD1_5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD1_5MouseClicked
        Calendar working = (Calendar)this.now.clone();
        working.set(Calendar.DAY_OF_WEEK, 7);
        if(this.dayForm == null||!this.dayForm.isShowing()){
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),5);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD1_5MouseClicked

    private void lD1_6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD1_6MouseClicked
        Calendar working = (Calendar)this.now.clone();
        working.set(Calendar.DAY_OF_WEEK, 7);
        if(this.dayForm == null||!this.dayForm.isShowing()){
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),6);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD1_6MouseClicked

    private void lD1_7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD1_7MouseClicked
        Calendar working = (Calendar)this.now.clone();
        working.set(Calendar.DAY_OF_WEEK, 7);
        if(this.dayForm == null||!this.dayForm.isShowing()){
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),7);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD1_7MouseClicked

    private void lD14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD14MouseClicked
        Calendar working = (Calendar)this.now.clone();
        working.set(Calendar.DAY_OF_WEEK, 7);
        if(this.dayForm == null||!this.dayForm.isShowing()){
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),4);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD14MouseClicked

    private void bPrevWeekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPrevWeekActionPerformed
        Calendar working = (Calendar)this.now.clone();
        this.now.add(Calendar.WEEK_OF_YEAR,-1);
        working.set(Calendar.DAY_OF_WEEK,7);
        working.add(Calendar.WEEK_OF_YEAR, -1);
        this.year = working.get(Calendar.YEAR);
        this.weekNumber = working.get(Calendar.WEEK_OF_YEAR);
        setDates(this.now);
        move(-1);
}//GEN-LAST:event_bPrevWeekActionPerformed

    private void lD4_3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD4_3MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 3);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),3);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD4_3MouseClicked

    private void lD4_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD4_1MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 3);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),1);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD4_1MouseClicked

    private void lD2_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD2_2MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 1);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),2);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD2_2MouseClicked

    private void lD3_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD3_1MouseClicked
       if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 2);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),1);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD3_1MouseClicked

    private void lD2_3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD2_3MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 1);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),3);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD2_3MouseClicked

    private void lD5_4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD5_4MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 4);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),4);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD5_4MouseClicked

    private void lD5_3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD5_3MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 4);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),3);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD5_3MouseClicked

    private void lD5_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD5_1MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 4);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),1);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD5_1MouseClicked

    private void lD5_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD5_2MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 4);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),2);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD5_2MouseClicked

    private void lD3_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD3_2MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 2);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),2);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD3_2MouseClicked

    private void lD3_3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD3_3MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 2);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),3);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD3_3MouseClicked

    private void lD4_4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD4_4MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 3);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),4);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD4_4MouseClicked

    private void lD4_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD4_2MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 3);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),2);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD4_2MouseClicked

    private void lD2_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD2_1MouseClicked
        if(this.dayForm == null||!this.dayForm.isShowing()){
            Calendar working = (Calendar)this.now.clone();
            working.add(Calendar.WEEK_OF_YEAR, 1);
            working.set(Calendar.DAY_OF_WEEK, 7);
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),1);
            this.dayForm.setVisible(true);
        } else
            return;
    }//GEN-LAST:event_lD2_1MouseClicked

    private void lD1_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD1_1MouseClicked
        System.out.println(evt.getSource().toString());
        Calendar working = (Calendar)this.now.clone();
        working.set(Calendar.DAY_OF_WEEK, 7);
        if(this.dayForm == null||!this.dayForm.isShowing()){
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),1);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD1_1MouseClicked

    private void lD1_3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD1_3MouseClicked
        Calendar working = (Calendar)this.now.clone();
        working.set(Calendar.DAY_OF_WEEK, 7);
        if(this.dayForm == null||!this.dayForm.isShowing()){
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),3);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD1_3MouseClicked

    private void lD1_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lD1_2MouseClicked
        Calendar working = (Calendar)this.now.clone();
        working.set(Calendar.DAY_OF_WEEK, 7);
        if(this.dayForm == null||!this.dayForm.isShowing()){
            this.dayForm = new TimeEntryDayForm(working.get(Calendar.YEAR),working.get(Calendar.WEEK_OF_YEAR),2);
            this.dayForm.setVisible(true);
        } else
            return;
}//GEN-LAST:event_lD1_2MouseClicked

    private void bNextPayOTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNextPayOTActionPerformed
        Calendar working = (Calendar)this.now.clone();
        this.now.add(Calendar.WEEK_OF_YEAR,+2);
        working.set(Calendar.DAY_OF_WEEK, 7);
        working.add(Calendar.WEEK_OF_YEAR, +2);
        this.year = working.get(Calendar.YEAR);
        this.weekNumber = working.get(Calendar.WEEK_OF_YEAR);
        setDates(this.now);
        move(+1);
        move(+1);
        populateOTview(this.year,this.weekNumber);
    }//GEN-LAST:event_bNextPayOTActionPerformed

    private void bSaveChangesW1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveChangesW1ActionPerformed
        DataConnection dc = new DataConnection();
        dc.connect();
        int ID = dc.isPayExisting(payPeriod1);
        double SThrs = u.validateHrs(this.tbSTw1.getText());
        double THhrs = u.validateHrs(this.tbTHw1.getText());
        double DThrs = u.validateHrs(this.tbDTw1.getText());
        boolean isZero = (SThrs+THhrs+DThrs==0);
        if(ID>0)
        {
            if(isZero)
                dc.delPayHrs(ID);
            else
                dc.updatePayHrs(ID, payPeriod1.get(Calendar.YEAR), payPeriod1.get(Calendar.MONTH),
                        payPeriod1.get(Calendar.DAY_OF_MONTH), SThrs, THhrs, DThrs, false, false, false);
        }else
        {
            if(!isZero)
                dc.addPayHrs(payPeriod1.get(Calendar.YEAR), payPeriod1.get(Calendar.MONTH),
                            payPeriod1.get(Calendar.DAY_OF_MONTH), SThrs, THhrs, DThrs, false, false, false);
        }
        dc.closeConnection();

    }//GEN-LAST:event_bSaveChangesW1ActionPerformed

    private void bSaveChangesW2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveChangesW2ActionPerformed
        DataConnection dc = new DataConnection();
        dc.connect();
        int ID = dc.isPayExisting(payPeriod2);
        double SThrs = u.validateHrs(this.tbSTw2.getText());
        double THhrs = u.validateHrs(this.tbTHw2.getText());
        double DThrs = u.validateHrs(this.tbDTw2.getText());
        boolean isZero = (SThrs+THhrs+DThrs==0);
        if(ID>0)
        {
            if(isZero)
                dc.delPayHrs(ID);
            else
                dc.updatePayHrs(ID, payPeriod2.get(Calendar.YEAR), payPeriod2.get(Calendar.MONTH),
                        payPeriod2.get(Calendar.DAY_OF_MONTH), SThrs, THhrs, DThrs, false, false, false);
        }else
        {
            if(!isZero)
                dc.addPayHrs(payPeriod2.get(Calendar.YEAR), payPeriod2.get(Calendar.MONTH),
                            payPeriod2.get(Calendar.DAY_OF_MONTH), SThrs, THhrs, DThrs, false, false, false);
        }
        dc.closeConnection();
    }//GEN-LAST:event_bSaveChangesW2ActionPerformed

    private void bSaveChangesW3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveChangesW3ActionPerformed
        DataConnection dc = new DataConnection();
        dc.connect();
        int ID = dc.isPayExisting(payPeriod3);
        double SThrs = u.validateHrs(this.tbSTw3.getText());
        double THhrs = u.validateHrs(this.tbTHw3.getText());
        double DThrs = u.validateHrs(this.tbDTw3.getText());
        boolean isZero = (SThrs+THhrs+DThrs==0);
        if(ID>0)
        {
            if(isZero)
                dc.delPayHrs(ID);
            else
                dc.updatePayHrs(ID, payPeriod3.get(Calendar.YEAR), payPeriod3.get(Calendar.MONTH),
                        payPeriod3.get(Calendar.DAY_OF_MONTH), SThrs, THhrs, DThrs, false, false, false);
        }else
        {
            if(!isZero)
                dc.addPayHrs(payPeriod3.get(Calendar.YEAR), payPeriod3.get(Calendar.MONTH),
                            payPeriod3.get(Calendar.DAY_OF_MONTH), SThrs, THhrs, DThrs, false, false, false);
        }
        dc.closeConnection();
    }//GEN-LAST:event_bSaveChangesW3ActionPerformed

    private void bCreateRptW1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCreateRptW1ActionPerformed
        otm.shortReport(1);
    }//GEN-LAST:event_bCreateRptW1ActionPerformed

    private void bCreateRptW2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCreateRptW2ActionPerformed
        otm.shortReport(2);
    }//GEN-LAST:event_bCreateRptW2ActionPerformed

    private void bCreateRptW3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCreateRptW3ActionPerformed
        otm.shortReport(3);
    }//GEN-LAST:event_bCreateRptW3ActionPerformed

    private void bLongReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLongReportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bLongReportActionPerformed

    private void bPrevPayOTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPrevPayOTActionPerformed
        Calendar working = (Calendar)this.now.clone();
        this.now.add(Calendar.WEEK_OF_YEAR,-2);
        working.set(Calendar.DAY_OF_WEEK,7);
        working.add(Calendar.WEEK_OF_YEAR, -2);
        this.year = working.get(Calendar.YEAR);
        this.weekNumber = working.get(Calendar.WEEK_OF_YEAR);
        setDates(this.now);
        move(-1);
        move(-1);
        populateOTview(this.year,this.weekNumber);
    }//GEN-LAST:event_bPrevPayOTActionPerformed

    private void populateTCView(int year, int week){
        DataConnection dc = new DataConnection();
        dc.connect();
        ResultSet rs;
        String tcData;
        String header;
        String footer;
        String lineData;
        float weekTotal = 0.0f;
        float sunTotal = 0.0f;
        float monTotal = 0.0f;
        float tueTotal = 0.0f;
        float wedTotal = 0.0f;
        float thuTotal = 0.0f;
        float friTotal = 0.0f;
        float satTotal = 0.0f;
        float sunTime;
        float monTime;
        float tueTime;
        float wedTime;
        float thuTime;
        float friTime;
        float satTime;
        int counter;
        String seperator;

        lineData = "";
        header = "Job Number     Task  LaborType             SUN    MON    TUE    WED    THU    FRI    SAT\n";
        seperator ="_________________________________________________________________________________________\n\n";
        tcData = "";
        //Set Date Range
        this.lDateRange.setText(this.calDates[0].getText() + " - "  + this.calDates[6].getText());

        //get time card comment
        try{
            rs = dc.getComment(year, week);
            if(rs.next())
                this.taComment.setText(rs.getString(4));
            else
                this.taComment.setText("");

        }catch (Exception e) {
                connectionErr(e);
        }

        //set Time Card Data
        try{
            rs = dc.getWeekData(year, week);
            while(rs.next()){
                //add job number
                lineData = rs.getString(2);//4
                for(counter=lineData.length();lineData.length()<=15;counter++)
                    lineData+= " ";
                //add task ID
                lineData += rs.getString(20);//5
                for(counter=lineData.length();lineData.length()<=20;counter++)
                    lineData+= " ";
                //add labor Type
                lineData+=rs.getString(3);//6
                for(counter=lineData.length();lineData.length()<=42;counter++)
                    lineData+= " ";

                //add hours
                sunTime = rs.getFloat(13);//7
                sunTotal += sunTime;
                lineData+= Float.toString(sunTime);
                for(counter=lineData.length();lineData.length()<=49;counter++)
                    lineData+= " ";
                monTime = rs.getFloat(14);//9
                monTotal += monTime;
                lineData+= Float.toString(monTime);
                for(counter=lineData.length();lineData.length()<=56;counter++)
                    lineData+= " ";
                tueTime = rs.getFloat(15);//11
                tueTotal += tueTime;
                lineData+= Float.toString(tueTime);
                for(counter=lineData.length();lineData.length()<=63;counter++)
                    lineData+= " ";
                wedTime = rs.getFloat(16);//13
                wedTotal += wedTime;
                lineData+= Float.toString(wedTime);
                for(counter=lineData.length();lineData.length()<=70;counter++)
                    lineData+= " ";
                thuTime = rs.getFloat(17);//15
                thuTotal+= thuTime;
                lineData+= Float.toString(thuTime);
                for(counter=lineData.length();lineData.length()<=77;counter++)
                    lineData+= " ";
                friTime = rs.getFloat(18);//17
                friTotal+= friTime;
                lineData+= Float.toString(friTime);
                for(counter=lineData.length();lineData.length()<=84;counter++)
                    lineData+= " ";
                satTime = rs.getFloat(19);//19
                satTotal+=satTime;
                lineData+= Float.toString(satTime);

                //Set totals
                
                tcData += lineData + "\n";
            }

            weekTotal = sunTotal+monTotal+tueTotal+wedTotal+thuTotal+friTotal+satTotal;
            footer = "Totals: ";
            for(counter=footer.length();footer.length()<=42;counter++)
                footer+= " ";
            footer+=Float.toString(sunTotal);
            for(counter=footer.length();footer.length()<=49;counter++)
                footer+= " ";
            footer+=Float.toString(monTotal);
            for(counter=footer.length();footer.length()<=56;counter++)
                footer+= " ";
            footer+=Float.toString(tueTotal);
            for(counter=footer.length();footer.length()<=63;counter++)
                footer+= " ";
            footer+=Float.toString(wedTotal);
            for(counter=footer.length();footer.length()<=70;counter++)
                footer+= " ";
            footer+=Float.toString(thuTotal);
            for(counter=footer.length();footer.length()<=77;counter++)
                footer+= " ";
            footer+=Float.toString(friTotal);
            for(counter=footer.length();footer.length()<=84;counter++)
                footer+= " ";
            footer+=Float.toString(satTotal) + "\n";

            footer += "Time Card Total: \t" + Float.toString(weekTotal);
            this.tpTimeCard.setText(header+seperator+tcData+seperator+footer);

        }catch (Exception e) {
                connectionErr(e);
        }

        dc.closeConnection();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bEditTCView;
    private javax.swing.JButton bExit;
    private javax.swing.JButton bExport1;
    private javax.swing.JButton bExport2;
    private javax.swing.JButton bExport3;
    private javax.swing.JButton bExport4;
    private javax.swing.JButton bExport5;
    private javax.swing.JButton bExportTCView;
    private javax.swing.JButton bLongReport;
    private javax.swing.JButton bNextPayOT;
    private javax.swing.JButton bNextWeek;
    private javax.swing.JButton bNextWeek2;
    private javax.swing.JButton bPrevPayOT;
    private javax.swing.JButton bPrevWeek;
    private javax.swing.JButton bPrevWeek3;
    private javax.swing.JButton bWeek1;
    private javax.swing.JButton bWeek2;
    private javax.swing.JButton bWeek3;
    private javax.swing.JButton bWeek4;
    private javax.swing.JButton bWeek5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lD14;
    private javax.swing.JLabel lD1_1;
    private javax.swing.JLabel lD1_2;
    private javax.swing.JLabel lD1_3;
    private javax.swing.JLabel lD1_5;
    private javax.swing.JLabel lD1_6;
    private javax.swing.JLabel lD1_7;
    private javax.swing.JLabel lD2_1;
    private javax.swing.JLabel lD2_2;
    private javax.swing.JLabel lD2_3;
    private javax.swing.JLabel lD2_4;
    private javax.swing.JLabel lD2_5;
    private javax.swing.JLabel lD2_6;
    private javax.swing.JLabel lD2_7;
    private javax.swing.JLabel lD3_1;
    private javax.swing.JLabel lD3_2;
    private javax.swing.JLabel lD3_3;
    private javax.swing.JLabel lD3_4;
    private javax.swing.JLabel lD3_5;
    private javax.swing.JLabel lD3_6;
    private javax.swing.JLabel lD3_7;
    private javax.swing.JLabel lD4_1;
    private javax.swing.JLabel lD4_2;
    private javax.swing.JLabel lD4_3;
    private javax.swing.JLabel lD4_4;
    private javax.swing.JLabel lD4_5;
    private javax.swing.JLabel lD4_6;
    private javax.swing.JLabel lD4_7;
    private javax.swing.JLabel lD5_1;
    private javax.swing.JLabel lD5_2;
    private javax.swing.JLabel lD5_3;
    private javax.swing.JLabel lD5_4;
    private javax.swing.JLabel lD5_5;
    private javax.swing.JLabel lD5_6;
    private javax.swing.JLabel lD5_7;
    private javax.swing.JLabel lDTEnteredW1;
    private javax.swing.JLabel lDTEnteredW2;
    private javax.swing.JLabel lDTEnteredW3;
    private javax.swing.JLabel lDTactualW1;
    private javax.swing.JLabel lDTactualW2;
    private javax.swing.JLabel lDTactualW3;
    private javax.swing.JLabel lDThrsW1;
    private javax.swing.JLabel lDThrsW2;
    private javax.swing.JLabel lDThrsW3;
    private javax.swing.JLabel lDTw1;
    private javax.swing.JLabel lDTw2;
    private javax.swing.JLabel lDTw3;
    private javax.swing.JLabel lDateRange;
    private javax.swing.JLabel lDateRangeW1;
    private javax.swing.JLabel lDateRangeW2;
    private javax.swing.JLabel lDateRangeW3;
    private javax.swing.JLabel lDateString;
    private javax.swing.JLabel lEnteredW1;
    private javax.swing.JLabel lEnteredW2;
    private javax.swing.JLabel lEnteredW3;
    private javax.swing.JLabel lFriCol;
    private javax.swing.JLabel lH1_1;
    private javax.swing.JLabel lH1_2;
    private javax.swing.JLabel lH1_3;
    private javax.swing.JLabel lH1_4;
    private javax.swing.JLabel lH1_5;
    private javax.swing.JLabel lH1_6;
    private javax.swing.JLabel lH1_7;
    private javax.swing.JLabel lH2_1;
    private javax.swing.JLabel lH2_2;
    private javax.swing.JLabel lH2_3;
    private javax.swing.JLabel lH2_4;
    private javax.swing.JLabel lH2_5;
    private javax.swing.JLabel lH2_6;
    private javax.swing.JLabel lH2_7;
    private javax.swing.JLabel lH3_1;
    private javax.swing.JLabel lH3_2;
    private javax.swing.JLabel lH3_3;
    private javax.swing.JLabel lH3_4;
    private javax.swing.JLabel lH3_5;
    private javax.swing.JLabel lH3_6;
    private javax.swing.JLabel lH3_7;
    private javax.swing.JLabel lH4_1;
    private javax.swing.JLabel lH4_2;
    private javax.swing.JLabel lH4_3;
    private javax.swing.JLabel lH4_4;
    private javax.swing.JLabel lH4_5;
    private javax.swing.JLabel lH4_6;
    private javax.swing.JLabel lH4_7;
    private javax.swing.JLabel lH5_1;
    private javax.swing.JLabel lH5_2;
    private javax.swing.JLabel lH5_3;
    private javax.swing.JLabel lH5_4;
    private javax.swing.JLabel lH5_5;
    private javax.swing.JLabel lH5_6;
    private javax.swing.JLabel lH5_7;
    private javax.swing.JLabel lMonCol;
    private javax.swing.JLabel lPayDateLblW1;
    private javax.swing.JLabel lPayDateLblW2;
    private javax.swing.JLabel lPayDateLblW3;
    private javax.swing.JLabel lPayDateW1;
    private javax.swing.JLabel lPayDateW2;
    private javax.swing.JLabel lPayDateW3;
    private javax.swing.JLabel lPayW2;
    private javax.swing.JLabel lPayW3;
    private javax.swing.JLabel lPayW4;
    private javax.swing.JLabel lRange;
    private javax.swing.JLabel lSTEnteredW1;
    private javax.swing.JLabel lSTEnteredW2;
    private javax.swing.JLabel lSTEnteredW3;
    private javax.swing.JLabel lSTactualW1;
    private javax.swing.JLabel lSTactualW2;
    private javax.swing.JLabel lSTactualW3;
    private javax.swing.JLabel lSThrsW1;
    private javax.swing.JLabel lSThrsW2;
    private javax.swing.JLabel lSThrsW3;
    private javax.swing.JLabel lSTw1;
    private javax.swing.JLabel lSTw2;
    private javax.swing.JLabel lSTw3;
    private javax.swing.JLabel lSatCol;
    private javax.swing.JLabel lSunCol;
    private javax.swing.JLabel lTHEnteredW1;
    private javax.swing.JLabel lTHEnteredW2;
    private javax.swing.JLabel lTHEnteredW3;
    private javax.swing.JLabel lTHactualW1;
    private javax.swing.JLabel lTHactualW2;
    private javax.swing.JLabel lTHactualW3;
    private javax.swing.JLabel lTHhrsW1;
    private javax.swing.JLabel lTHhrsW2;
    private javax.swing.JLabel lTHhrsW3;
    private javax.swing.JLabel lTHw1;
    private javax.swing.JLabel lTHw2;
    private javax.swing.JLabel lTHw3;
    private javax.swing.JLabel lThuCol;
    private javax.swing.JLabel lTueCol;
    private javax.swing.JLabel lWedCol;
    private javax.swing.JLayeredPane lpCalendar;
    private javax.swing.JLayeredPane lpOvertime;
    private javax.swing.JLayeredPane lpTimeCardWeek;
    private javax.swing.JMenu mHelp;
    private javax.swing.JMenu mTools;
    private javax.swing.JMenuItem miAbout;
    private javax.swing.JMenuItem miDBManage;
    private javax.swing.JMenuItem miExit;
    private javax.swing.JMenuItem miHelpDoc;
    private javax.swing.JMenuItem miImport;
    private javax.swing.JMenuItem miOTTracker;
    private javax.swing.JMenuItem miProjectRpt;
    private javax.swing.JMenuItem miSearch;
    private javax.swing.JMenuItem miSettings;
    private javax.swing.JPanel p1_1;
    private javax.swing.JPanel p1_2;
    private javax.swing.JPanel p1_3;
    private javax.swing.JPanel p1_4;
    private javax.swing.JPanel p1_5;
    private javax.swing.JPanel p1_6;
    private javax.swing.JPanel p1_7;
    private javax.swing.JPanel p2_1;
    private javax.swing.JPanel p2_2;
    private javax.swing.JPanel p2_3;
    private javax.swing.JPanel p2_4;
    private javax.swing.JPanel p2_5;
    private javax.swing.JPanel p2_6;
    private javax.swing.JPanel p2_7;
    private javax.swing.JPanel p3_1;
    private javax.swing.JPanel p3_2;
    private javax.swing.JPanel p3_3;
    private javax.swing.JPanel p3_4;
    private javax.swing.JPanel p3_5;
    private javax.swing.JPanel p3_6;
    private javax.swing.JPanel p3_7;
    private javax.swing.JPanel p4_1;
    private javax.swing.JPanel p4_2;
    private javax.swing.JPanel p4_3;
    private javax.swing.JPanel p4_4;
    private javax.swing.JPanel p4_5;
    private javax.swing.JPanel p4_6;
    private javax.swing.JPanel p4_7;
    private javax.swing.JPanel p5_1;
    private javax.swing.JPanel p5_2;
    private javax.swing.JPanel p5_3;
    private javax.swing.JPanel p5_4;
    private javax.swing.JPanel p5_5;
    private javax.swing.JPanel p5_6;
    private javax.swing.JPanel p5_7;
    private javax.swing.JTabbedPane pTabbedPane;
    private javax.swing.JSeparator sep1;
    private javax.swing.JSeparator sep2;
    private javax.swing.JSeparator sep3;
    private javax.swing.JTextArea taComment;
    private javax.swing.JTextField tbDTw1;
    private javax.swing.JTextField tbDTw2;
    private javax.swing.JTextField tbDTw3;
    private javax.swing.JTextField tbSTw1;
    private javax.swing.JTextField tbSTw2;
    private javax.swing.JTextField tbSTw3;
    private javax.swing.JTextField tbTHw1;
    private javax.swing.JTextField tbTHw2;
    private javax.swing.JTextField tbTHw3;
    private javax.swing.JTextPane tpTimeCard;
    // End of variables declaration//GEN-END:variables

    private void setDates(Calendar currDate){
        int counter;
        int ictr;
        int location;
        int offset;
        Calendar working;
        Calendar current;

        current = Calendar.getInstance();
        this.lDateString.setText(current.getTime().toString());
        working = (Calendar)currDate.clone();
        DateFormat dateFormat = new SimpleDateFormat("MMM dd yyyy");

        location=working.get(Calendar.DAY_OF_WEEK);
        switch(location)
        {
           case 1: offset=1;
           break;
           case 2: offset=2;
           break;
           case 3: offset=3;
           break;
           case 4: offset=4;
           break;
           case 5: offset=5;
           break;
           case 6: offset=6;
           break;
           case 7: offset=7;
           break;
           default: offset=1;
        }

        working.add(Calendar.DATE,-offset);

        ictr = 0;
        for(counter=0;counter<=34;counter++)
        {
            working.add(Calendar.DATE, +1);
            this.calDates[ictr].setText(dateFormat.format(working.getTime()));
            //set alternating panel colors for month
            
            if(working.get(Calendar.MONTH)==0||working.get(Calendar.MONTH)%2==0)
            {
                //set weekday color
                if(working.get(Calendar.DAY_OF_WEEK)>1&&working.get(Calendar.DAY_OF_WEEK)<7)
                    this.calPanels[ictr].setBackground(Color.WHITE);
                else //set weekend color
                    this.calPanels[ictr].setBackground(new java.awt.Color(255, 255, 153));
            }else if(working.get(Calendar.DAY_OF_WEEK)>1&&working.get(Calendar.DAY_OF_WEEK)<7)
            {
                this.calPanels[ictr].setBackground(new java.awt.Color(200, 255, 200));
            }else
                this.calPanels[ictr].setBackground(new java.awt.Color(153, 255, 153));
            
            //set date for end of week to show correct week and year number
            //for tool tip
            currDate = (Calendar)working.clone();
            currDate.set(Calendar.DAY_OF_WEEK, 7);
            this.calPanels[ictr].setToolTipText("Week " +
                    Integer.toString(currDate.get(Calendar.WEEK_OF_YEAR)) +
                    " of " + Integer.toString(currDate.get(Calendar.YEAR)));
            ictr++;
        }
    
    }

    private void setHours(){
  
        int counter;
        Double temp;

        for(counter =0;counter<=34; counter++){
            temp = this.hours[counter];
            if(temp == 0)
                this.calHours[counter].setText("");
            else
                this.calHours[counter].setText(formatter.format(this.hours[counter]));
        }
    }

    private void initPanelArrays(){
       this.calDates[0] = this.lD1_1;
       this.calDates[1] = this.lD1_2;
       this.calDates[2] = this.lD1_3;
       this.calDates[3] = this.lD14;
       this.calDates[4] = this.lD1_5;
       this.calDates[5] = this.lD1_6;
       this.calDates[6] = this.lD1_7;
       this.calDates[7] = this.lD2_1;
       this.calDates[8] = this.lD2_2;
       this.calDates[9] = this.lD2_3;
       this.calDates[10] = this.lD2_4;
       this.calDates[11] = this.lD2_5;
       this.calDates[12] = this.lD2_6;
       this.calDates[13] = this.lD2_7;
       this.calDates[14] = this.lD3_1;
       this.calDates[15] = this.lD3_2;
       this.calDates[16] = this.lD3_3;
       this.calDates[17] = this.lD3_4;
       this.calDates[18] = this.lD3_5;
       this.calDates[19] = this.lD3_6;
       this.calDates[20] = this.lD3_7;
       this.calDates[21] = this.lD4_1;
       this.calDates[22] = this.lD4_2;
       this.calDates[23] = this.lD4_3;
       this.calDates[24] = this.lD4_4;
       this.calDates[25] = this.lD4_5;
       this.calDates[26] = this.lD4_6;
       this.calDates[27] = this.lD4_7;
       this.calDates[28] = this.lD5_1;
       this.calDates[29] = this.lD5_2;
       this.calDates[30] = this.lD5_3;
       this.calDates[31] = this.lD5_4;
       this.calDates[32] = this.lD5_5;
       this.calDates[33] = this.lD5_6;
       this.calDates[34] = this.lD5_7;

       this.calHours[0] = this.lH1_1;
       this.calHours[1] = this.lH1_2;
       this.calHours[2] = this.lH1_3;
       this.calHours[3] = this.lH1_4;
       this.calHours[4] = this.lH1_5;
       this.calHours[5] = this.lH1_6;
       this.calHours[6] = this.lH1_7;
       this.calHours[7] = this.lH2_1;
       this.calHours[8] = this.lH2_2;
       this.calHours[9] = this.lH2_3;
       this.calHours[10] = this.lH2_4;
       this.calHours[11] = this.lH2_5;
       this.calHours[12] = this.lH2_6;
       this.calHours[13] = this.lH2_7;
       this.calHours[14] = this.lH3_1;
       this.calHours[15] = this.lH3_2;
       this.calHours[16] = this.lH3_3;
       this.calHours[17] = this.lH3_4;
       this.calHours[18] = this.lH3_5;
       this.calHours[19] = this.lH3_6;
       this.calHours[20] = this.lH3_7;
       this.calHours[21] = this.lH4_1;
       this.calHours[22] = this.lH4_2;
       this.calHours[23] = this.lH4_3;
       this.calHours[24] = this.lH4_4;
       this.calHours[25] = this.lH4_5;
       this.calHours[26] = this.lH4_6;
       this.calHours[27] = this.lH4_7;
       this.calHours[28] = this.lH5_1;
       this.calHours[29] = this.lH5_2;
       this.calHours[30] = this.lH5_3;
       this.calHours[31] = this.lH5_4;
       this.calHours[32] = this.lH5_5;
       this.calHours[33] = this.lH5_6;
       this.calHours[34] = this.lH5_7;

       this.calPanels[0] = this.p1_1;
       this.calPanels[1] = this.p1_2;
       this.calPanels[2] = this.p1_3;
       this.calPanels[3] = this.p1_4;
       this.calPanels[4] = this.p1_5;
       this.calPanels[5] = this.p1_6;
       this.calPanels[6] = this.p1_7;
       this.calPanels[7] = this.p2_1;
       this.calPanels[8] = this.p2_2;
       this.calPanels[9] = this.p2_3;
       this.calPanels[10] = this.p2_4;
       this.calPanels[11] = this.p2_5;
       this.calPanels[12] = this.p2_6;
       this.calPanels[13] = this.p2_7;
       this.calPanels[14] = this.p3_1;
       this.calPanels[15] = this.p3_2;
       this.calPanels[16] = this.p3_3;
       this.calPanels[17] = this.p3_4;
       this.calPanels[18] = this.p3_5;
       this.calPanels[19] = this.p3_6;
       this.calPanels[20] = this.p3_7;
       this.calPanels[21] = this.p4_1;
       this.calPanels[22] = this.p4_2;
       this.calPanels[23] = this.p4_3;
       this.calPanels[24] = this.p4_4;
       this.calPanels[25] = this.p4_5;
       this.calPanels[26] = this.p4_6;
       this.calPanels[27] = this.p4_7;
       this.calPanels[28] = this.p5_1;
       this.calPanels[29] = this.p5_2;
       this.calPanels[30] = this.p5_3;
       this.calPanels[31] = this.p5_4;
       this.calPanels[32] = this.p5_5;
       this.calPanels[33] = this.p5_6;
       this.calPanels[34] = this.p5_7;



    }

    private void initHourArray(int year, int weekNumber){
        ResultSet time;
        int counter;
        int arrayCtr;
        int resultCtr;
        Calendar working = (Calendar)this.now.clone();
        working.set(Calendar.YEAR, year);
        working.set(Calendar.WEEK_OF_YEAR,weekNumber);
        working.set(Calendar.DAY_OF_WEEK, 7);

        this.dc1.connect();

        try{
            arrayCtr = 0;
            for(counter=0;counter<=4;counter++){
                if(counter>0)
                    working.add(Calendar.WEEK_OF_YEAR, +1);
                time = this.dc1.getWeekTotals(working.get(Calendar.YEAR), working.get(Calendar.WEEK_OF_YEAR));
                if(time.next()){
                    for(resultCtr=1; resultCtr<=7; resultCtr++){
                        this.hours[arrayCtr] = time.getDouble(resultCtr);
                        arrayCtr++;
                    }
                }else
                {
                    for(resultCtr=1; resultCtr<=7; resultCtr++){
                        this.hours[arrayCtr] = 0.0;
                        arrayCtr++;
                    }
                }
                time.close();
            }
        }
        catch (Exception e) {
            connectionErr(e);
        }


        this.dc1.closeConnection();


    }

    private void connectionErr(Exception e){
        JOptionPane.showMessageDialog(this, "Error has occured on the Main Page: " + e);
    }

    private void move(int direction){
        ResultSet week;
        int counter;
        Calendar working = (Calendar)this.now.clone();
        working.set(Calendar.DAY_OF_WEEK, 7);

        this.dc1.connect();

        if(direction>0){
            //move forward one week

            //move hours array
            for(counter=0;counter<=27;counter++){
                this.hours[counter] = this.hours[counter+7];
            }
            working.add(Calendar.WEEK_OF_YEAR, +4);

            

            try{
                week = this.dc1.getWeekTotals(working.get(Calendar.YEAR), working.get(Calendar.WEEK_OF_YEAR));
                if(week.next()){
                    for(counter=1;counter<=7;counter++)
                    {
                        this.hours[counter+27] = week.getDouble(counter);
                    }
                }else
                {
                    for(counter=28;counter<=34;counter++)
                    {
                        this.hours[counter] = 0.0;
                    }
                }
                setHours();
                week.close();
            }
            catch (Exception e) {
                connectionErr(e);
                for(counter=28;counter<=34;counter++)
                {
                   this.hours[counter] = 0.0;
                }
            }



        }else if(direction<0){
            //move back one week
            Double[] temp = new Double[35];

            temp = this.hours.clone();

            //move hours array
            for(counter=0;counter<=27;counter++){
                this.hours[counter+7] = temp[counter];
            }

            try{
                week = this.dc1.getWeekTotals(working.get(Calendar.YEAR)
                        ,working.get(Calendar.WEEK_OF_YEAR));
                if(week.next()){
                    for(counter=0;counter<=6;counter++)
                    {
                        this.hours[counter] = week.getDouble(counter+1);
                    }
                }else
                {
                    for(counter=0;counter<=6;counter++)
                    {
                        this.hours[counter] = 0.0;
                    }
                }
                setHours();
                week.close();
            }
            catch (Exception e) {
                connectionErr(e);
                for(counter=0;counter<=6;counter++)
                {
                    this.hours[counter] = 0.0;
                }
            }

        }
        this.dc1.closeConnection();
        this.repaint();

    }
    
    private boolean exportTC(int year,int weekNumber){
        ResultSet rs;
        ResultSet rsc;
        String writeLine;
        String oracleColumns = "Project,Task,Type,Sun,CommentText," +
                "Mon,CommentText,Tue,CommentText,Wed,CommentText,Thu,CommentText," +
                "Fri,CommentText,Sat,CommentText,END_COLUMN";
        String[] oracleSuffix;
        boolean sucess = false;
        Calendar working = Calendar.getInstance();
        working.set(Calendar.YEAR, year);
        working.set(Calendar.WEEK_OF_YEAR,weekNumber);
        working.set(Calendar.DAY_OF_WEEK,1);
        DateFormat dateFormat = new SimpleDateFormat("MMMMM dd, yyyy");
        String fileString = dateFormat.format(working.getTime());
        working.set(Calendar.DAY_OF_WEEK,7);
        fileString+= " - " + dateFormat.format(working.getTime());
        this.dc1.connect();
        
        try{
                BufferedWriter writer = new BufferedWriter(new FileWriter(this.sf.getExportLocation() +
                        "\\" + fileString +".csv"));
                rsc = this.dc1.getComment(year, weekNumber);
                writer.write("START_HEADER,");
                writer.newLine();
                
                if(rsc.next()){
                    writer.write("Comments," +rsc.getString(1) + ",");
                    writer.newLine();
                }else
                {
                    writer.write("Comments,,");
                    writer.newLine();
                }
                rsc.close();
                writer.write("STOP_HEADER,");
                writer.newLine();
                writer.newLine();
                writer.write("START_TEMPLATE,");
                writer.newLine();
                writer.write(oracleColumns);
                writer.newLine();


                rs = this.dc1.getWeekData(year,weekNumber);
                while(rs.next()){
                    writeLine = rs.getString(4)+","+rs.getString(5)+","+rs.getString(6)+
                            ","+convertHrs(rs.getDouble(7))+","+this.u.validateCom(rs.getString(8))+","+
                            convertHrs(rs.getDouble(9))+","+this.u.validateCom(rs.getString(10))+","+
                            convertHrs(rs.getDouble(11))+","+this.u.validateCom(rs.getString(12))+","+
                            convertHrs(rs.getDouble(13))+","+this.u.validateCom(rs.getString(14))+","+
                            convertHrs(rs.getDouble(15))+","+this.u.validateCom(rs.getString(16))+","+
                            convertHrs(rs.getDouble(17))+","+this.u.validateCom(rs.getString(18))+","+
                            convertHrs(rs.getDouble(19))+","+this.u.validateCom(rs.getString(20))+",";
                    writer.write(writeLine);
                    writer.newLine();
                }
                writer.write("STOP_TEMPLATE,,,,,,,,,,,,,,,,,");
                writer.newLine();
                writer.newLine();
                oracleSuffix = this.sf.getOracleSuffix();
                writer.write(oracleSuffix[0]);
                writer.newLine();
                writer.write(oracleSuffix[1]);
                writer.newLine();
                writer.write(oracleSuffix[2]);
                writer.newLine();
                writer.write(oracleSuffix[3]);
                writer.newLine();
                writer.write(oracleSuffix[4]);
                writer.newLine();
                writer.write(oracleSuffix[5]);
                writer.newLine();

                rs.close();
                writer.close();
                sucess = true;
            }
            catch (Exception e) {
                connectionErr(e);
            }
        this.dc1.closeConnection();
        return sucess;
    }

    private String convertHrs(Double hrs){
        
        if(hrs == 0){
            return "";
        }else
            return formatter.format(hrs);

    }

     private boolean checkSettings(){
        boolean validSetup;
        String filename;
        String error="Missing Required file: \n";
        File f;

        this.sf = new SettingsForm();
        validSetup = true;

        filename = this.sf.getDBFile();
        f = new File(filename);

        if(!f.exists()){
            error= "Database File TE.MDB" +
                    "\nYou will be redirected to the setup screen." +
                    "Set the location of the Database files and then" +
                    "\nreload the application" +
                    "\nThe TE.MDB and Template.MDB " +
                    "\nmust be in same directory";
            JOptionPane.showMessageDialog(null, error);
            validSetup = false;
        }

        return validSetup;
    }

     private void createOnlyInstanceFile(){
        try {
            // Create temp file.
            this.instanceFile =  new File(this.sf.getProgramLocation()+"\\holder.tmp");

            // Write to temp file
            BufferedWriter out = new BufferedWriter(new FileWriter(this.instanceFile));
            out.write("This file prevents TEWIN from loading. Delete if receiving error when loading program");
            out.close();

        } catch (IOException e) {
            connectionErr(e);
        }

     }

}
